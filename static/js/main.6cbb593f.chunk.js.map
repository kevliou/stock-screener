{"version":3,"sources":["components/search/SearchBar.js","components/search/AutoSuggestion.js","services/Api.js","components/SearchForm.js","components/other/DataTable.js","components/other/AboutCard.js","components/other/KeyStatsCard.js","services/ChartMaker.js","components/chart/StockPriceChart.js","components/chart/DateToggleButtons.js","components/chart/PriceChangePercent.js","components/chart/PriceChangeAmount.js","components/chart/ChartHeader.js","services/ChartDataFormatter.js","components/chart/ChartHooks.js","components/chart/ChartCard.js","components/StockOverview.js","components/Footer.js","components/LandingPage.js","App.js","index.js"],"names":["SearchBar","props","searchValue","updateSearchValue","clearSearchValue","handleSearch","setFocus","className","InputBase","id","placeholder","autoComplete","onChange","e","target","value","onKeyDown","key","onFocus","select","startAdornment","IconButton","position","size","aria-label","onClick","Search","endAdornment","Close","AutoSuggestion","suggestionItems","suggestionList","updateTicker","undefined","lastItem","length","map","el","index","ListItem","button","divider","ticker","ListItemText","primary","name","secondary","Paper","elevation","List","ApiClient","instance","axios","create","baseURL","Promise","resolve","reject","get","then","res","data","catch","err","console","log","searchTerm","params","SearchForm","updateSelectedCompany","clearSelectedCompany","apiClient","useState","a","getTickerDict","setTickerDict","JSON","parse","getDict","tickerDict","setSearchValue","setSuggestionList","getFirstSuggestionTicker","firstSuggestion","getSuggestion","suggestions","useEffect","getSuggestionList","result","forEach","item","push","isMounted","getList","hasFocus","setHasFocus","isFocused","ClickAwayListener","onClickAway","DataTable","list","tableEntries","TableRow","TableCell","align","Table","TableBody","AboutCard","description","aboutList","isHidden","setIsHidden","headerDescription","setHeaderDescription","ellipsisStyle","display","moreTextStyle","buttonText","Typography","variant","slice","style","Button","disableElevation","paragraph","Card","CardHeader","title","CardContent","Divider","KeyStatsCard","keyStatList","ChartMaker","chartContainer","chartData","dateRange","isChangePositive","chartConfig","type","datasets","label","backgroundColor","borderColor","fill","pointRadius","spanGaps","options","adapter","date","locale","enUS","plugins","legend","tooltip","intersect","displayColors","scales","x","time","unit","displayFormats","hour","day","week","month","quarter","year","tooltipFormat","grid","y","tick","callback","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","formatter","responsive","maintainAspectRatio","this","gradient","getGradient","current","dataOptions","getBorderColor","setDateRangeOptions","height","getContext","createLinearGradient","addColorStop","config","xScale","Date","setHours","setMinutes","setSeconds","max","Chart","StockPriceChart","useRef","chartInstance","setChartInstance","prevChart","destroy","getChart","update","ref","role","DateToggleButtons","handleDateClick","exclusive","PriceChangePercent","percentChange","percentText","setPercentText","signDisplay","format","color","ArrowUpward","aria-hidden","ArrowDownward","PriceChangeAmount","amountChange","amountText","setAmountText","dateLabel","changeString","ChartHeader","selectedTicker","selectedName","handlePriceChange","lastQuote","setLastQuote","updateTime","setUpdateTime","dateFormatter","DateTimeFormat","dateStyle","timeStyle","timeZone","getQuote","t","c","setAmountChange","startPrice","change","setPercentChange","currencyFormatter","currency","header","disableTypography","action","Chip","chartDataFormatter","parse1D","parseDate","dateString","minute","results","close","entry","volume","sort","b","parse5D","refreshDate","endDate","startDate","timeSeriesData","currentDate","startTime","endTime","parse1M","parseDailyData","parse6M","parseYTD","getFullYear","parse1Y","parse5Y","v","useChartData","chartData1D","setChartData1D","chartData5D","setChartData5D","chartData1M","setChartData1M","chartData6M","setChartData6M","chartDataYTD","setChartDataYTD","chartData1Y","setChartData1Y","chartData5Y","setChartData5Y","getIntradayQuotes","getFiveDayQuotes","getAnnualQuotes","apiData","setAnnualData","getFiveYearQuotes","ChartCard","setDateRange","setIsChangePositive","isPositive","newDate","formatAddress","address","address2","city","state","country","formatNumber","isNaN","abbreviateNumber","amount","digits","Math","floor","log10","thousands","symbol","charAt","pow","toFixed","StockOverview","setAboutList","setKeyStatList","setDescription","getCompanyOverview","wholeNumber","Map","sector","industry","employees","updateAboutCard","updateKeyStats","updateQuote","keyStatMap","set","decimal","low","high","week52low","week52high","marketcap","peRatio","dividendYield","percentage","ttmEPS","getKeyStats","keyStatsProm","getPreviousDayQuote","quoteProm","all","fetchData","Footer","handleOpenUrlInNewTab","url","newWindow","window","open","opener","Container","maxWidth","GitHub","LinkedIn","location","href","Email","LandingPage","setSelectedTicker","setSelectedName","companyName","App","theme","createMuiTheme","palette","main","typography","h1","fontSize","body1","body2","subtitle1","overrides","MuiTableRow","root","borderBottom","ThemeProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cbb593f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { IconButton, InputBase } from '@material-ui/core';\r\nimport { Search, Close } from '@material-ui/icons';\r\nimport './SearchBar.css';\r\n\r\nfunction SearchBar(props) {\r\n  const searchValue = props.searchValue;\r\n  const updateSearchValue = props.updateSearchValue;\r\n  const clearSearchValue = props.clearSearchValue;\r\n  const handleSearch = props.handleSearch;\r\n  const setFocus = props.setFocus;\r\n\r\n  function handleChange(e) {\r\n    updateSearchValue(e.target.value);\r\n  }\r\n\r\n  function handleCloseClick() {\r\n    clearSearchValue();\r\n    setFocus(false);\r\n  }\r\n\r\n  function handleEnterKey(e) {\r\n    if (e.key === \"Enter\") {\r\n      handleSearch(searchValue);\r\n      setFocus(false);\r\n    }\r\n  }\r\n\r\n  function handleSearchIcon() {\r\n    props.handleSearch(searchValue);\r\n    setFocus(false);\r\n  }\r\n\r\n  function handleOnFocus(e) {\r\n    e.target.select();\r\n    setFocus(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"search-card\">\r\n      <InputBase\r\n        id=\"input-with-icon-adornment\"\r\n        className=\"search-bar\"\r\n        placeholder=\"Search for US stocks\"\r\n        autoComplete='off'\r\n        onChange={handleChange}\r\n        onKeyDown={handleEnterKey}\r\n        onFocus={handleOnFocus}\r\n        value={searchValue}\r\n        startAdornment={\r\n          <IconButton\r\n            position=\"start\"\r\n            className=\"search-button\"\r\n            size=\"small\"\r\n            aria-label=\"search\"\r\n            onClick={handleSearchIcon}\r\n          >\r\n            <Search />\r\n          </IconButton>\r\n        }\r\n        endAdornment={searchValue !== \"\" &&\r\n          <IconButton\r\n            position=\"end\"\r\n            size=\"small\"\r\n            aria-label=\"close\"\r\n            onClick={handleCloseClick}\r\n          >\r\n            <Close />\r\n          </IconButton>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar","import React from 'react';\r\nimport { Paper, List, ListItem, ListItemText } from '@material-ui/core';\r\nimport './AutoSuggestion.css';\r\n\r\nfunction AutoSuggestion(props) {\r\n  const suggestionList = props.suggestionList;\r\n  const updateSearchValue = props.updateSearchValue;\r\n  const updateTicker = props.updateTicker;\r\n  const setFocus = props.setFocus;\r\n\r\n  function handleClick(ticker) {\r\n    updateSearchValue(ticker);\r\n    updateTicker(ticker);\r\n    setFocus(false);\r\n  }\r\n\r\n\r\n  // Render list items\r\n  let suggestionItems;\r\n  if (suggestionList !== undefined) {\r\n    const lastItem = suggestionList.length;\r\n\r\n    suggestionItems = suggestionList.map((el, index) => {\r\n      return (\r\n        <div key={el.ticker}>\r\n          <ListItem\r\n            button\r\n            divider={index !== lastItem - 1}\r\n            onClick={() => handleClick(el.ticker)}\r\n          >\r\n            <ListItemText\r\n              primary={el.name}\r\n              secondary={\"Ticker: \" + el.ticker}\r\n            />\r\n          </ListItem>\r\n        </div>\r\n      );\r\n    });\r\n  } else {\r\n    suggestionItems =\r\n      <ListItem button >\r\n        <ListItemText primary=\"No matches...\" />\r\n      </ListItem>\r\n  }\r\n\r\n  return (\r\n    <Paper elevation={5} className=\"result-box\">\r\n      <List>\r\n        {suggestionItems}\r\n      </List>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default AutoSuggestion","import axios from 'axios';\r\n\r\nexport class ApiClient {\r\n  instance = axios.create({\r\n    baseURL: 'http://localhost:5000/api'\r\n  });\r\n\r\n  getTickerDict() {\r\n    return new Promise((resolve, reject) => {\r\n      resolve(this.instance\r\n        .get('/getTickerDict')\r\n        .then(res => res.data)\r\n      ).catch(err => {\r\n        reject(console.log(err));\r\n      });\r\n    });\r\n  }\r\n\r\n  getSuggestion(searchTerm) {\r\n    return new Promise((resolve, reject) => {\r\n      resolve(this.instance\r\n        .get('/getSuggestion', { params: { 'id': searchTerm } })\r\n        .then(res => res.data)\r\n      ).catch(err => {\r\n        reject(console.log(err));\r\n      });\r\n    });\r\n  }\r\n\r\n  getCompanyOverview(ticker) {\r\n    return new Promise((resolve, reject) => {\r\n      resolve(this.instance\r\n        .get('/getOverview', { params: { 'id': ticker } })\r\n        .then(res => res.data)\r\n      ).catch(err => {\r\n        reject(console.log(err));\r\n      });\r\n    });\r\n  }\r\n\r\n  getKeyStats(ticker) {\r\n    return new Promise((resolve, reject) => {\r\n      resolve(this.instance\r\n        .get('/getKeyStats', { params: { 'id': ticker } })\r\n        .then(res => res.data)\r\n      ).catch(err => {\r\n        reject(console.log(err));\r\n      });\r\n    });\r\n  }\r\n  \r\n  getQuote(ticker) {\r\n    return new Promise((resolve, reject) => {\r\n      resolve(this.instance\r\n        .get('/getQuote', { params: { 'id': ticker } })\r\n        .then(res => res.data)\r\n      ).catch(err => {\r\n        reject(console.log(err));\r\n      });\r\n    });\r\n  }\r\n\r\n  getPreviousDayQuote(ticker) {\r\n    return new Promise((resolve, reject) => {\r\n      resolve(this.instance\r\n        .get('/getPreviousDayQuote', { params: { 'id': ticker } })\r\n        .then(res => res.data)\r\n      ).catch(err => {\r\n        reject(console.log(err));\r\n      });\r\n    });\r\n  }\r\n\r\n  getIntradayQuotes(ticker) {\r\n    return new Promise((resolve, reject) => {\r\n      resolve(this.instance\r\n        .get('/getIntradayQuotes', { params: { 'id': ticker } })\r\n        .then(res => res.data)\r\n      ).catch(err => {\r\n        reject(console.log(err));\r\n      });\r\n    });\r\n  }\r\n\r\n  getFiveDayQuotes(ticker) {\r\n    return new Promise((resolve, reject) => {\r\n      resolve(this.instance\r\n        .get('/getFiveDayQuotes', { params: { 'id': ticker } })\r\n        .then(res => res.data)\r\n      ).catch(err => {\r\n        reject(console.log(err));\r\n      });\r\n    });\r\n  }\r\n\r\n  getAnnualQuotes(ticker) {\r\n    return new Promise((resolve, reject) => {\r\n      resolve(this.instance\r\n        .get('/getAnnualQuotes', { params: { 'id': ticker } })\r\n        .then(res => res.data)\r\n      ).catch(err => {\r\n        reject(console.log(err));\r\n      });\r\n    });\r\n  }\r\n\r\n  getFiveYearQuotes(ticker) {\r\n    return new Promise((resolve, reject) => {\r\n      resolve(this.instance\r\n        .get('/getFiveYearQuotes', { params: { 'id': ticker } })\r\n        .then(res => res.data)\r\n      ).catch(err => {\r\n        reject(console.log(err));\r\n      });\r\n    });\r\n  }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport SearchBar from './search/SearchBar';\r\nimport AutoSuggestion from './search/AutoSuggestion';\r\nimport { ApiClient } from '../services/Api';\r\nimport { ClickAwayListener } from '@material-ui/core';\r\n\r\nfunction SearchForm(props) {\r\n  const updateSelectedCompany = props.updateSelectedCompany;\r\n  const clearSelectedCompany = props.clearSelectedCompany;\r\n  const apiClient = new ApiClient();\r\n\r\n  const [tickerDict, setTickerDict] = useState(() => {\r\n    async function getDict() {\r\n      await apiClient.getTickerDict()\r\n        .then(res => setTickerDict(JSON.parse(res)))\r\n    }\r\n\r\n    getDict();\r\n  });\r\n\r\n  const [searchValue, setSearchValue] = useState('');\r\n  function updateSearchValue(value) {\r\n    setSearchValue(value);\r\n  }\r\n\r\n  function clearSearchValue() {\r\n    setSearchValue('');\r\n    clearSelectedCompany();\r\n  }\r\n\r\n  function updateTicker(ticker) {\r\n    updateSelectedCompany(ticker, tickerDict[ticker]);\r\n  }\r\n\r\n  const [suggestionList, setSuggestionList] = useState(undefined);\r\n  useEffect(() => {\r\n    async function getSuggestionList(searchTerm) {\r\n      const apiClient = new ApiClient();\r\n      const suggestions = await apiClient.getSuggestion(searchTerm);\r\n      const result = [];\r\n  \r\n      if (suggestions !== undefined && suggestions !== '') {\r\n        suggestions.forEach(el => {\r\n          const item = {\r\n            'ticker': el,\r\n            'name': tickerDict[el],\r\n          }\r\n          result.push(item);\r\n        });\r\n      } else {\r\n        return\r\n      }\r\n  \r\n      return result;\r\n    }\r\n\r\n    let isMounted = true;\r\n    async function getList() {\r\n      await getSuggestionList(searchValue)\r\n        .then(res => (isMounted) ? setSuggestionList(res) : undefined);\r\n    }\r\n\r\n    if (searchValue !== ''){\r\n      getList();\r\n    }\r\n\r\n    // Do not fetch suggestion list if component is unmounted\r\n    return function cleanup() {\r\n      isMounted = false;\r\n    }\r\n  }, [searchValue, tickerDict]);\r\n\r\n  // Retrieve first auto selection item on pressing enter/ search icon press\r\n  async function handleSearch(value) {\r\n    const firstSuggestion = await getFirstSuggestionTicker(value);\r\n\r\n    if (firstSuggestion !== undefined) {\r\n      setSearchValue(firstSuggestion);\r\n      updateSelectedCompany(firstSuggestion, tickerDict[firstSuggestion]);\r\n    }\r\n  }\r\n\r\n  async function getFirstSuggestionTicker(searchTerm) {\r\n    const suggestions = await apiClient.getSuggestion(searchTerm);\r\n\r\n    if (suggestions !== undefined && suggestions !== '') {\r\n      return suggestions[0];\r\n    }\r\n  }\r\n\r\n  const [hasFocus, setHasFocus] = useState(false);\r\n  function setFocus(isFocused) {\r\n    setHasFocus(isFocused);\r\n  }\r\n  \r\n  function handleClickAway() {\r\n    setFocus(false);\r\n  }\r\n\r\n  return (\r\n    <ClickAwayListener onClickAway={handleClickAway}>\r\n      <div>\r\n        <SearchBar\r\n          searchValue={searchValue}\r\n          updateSearchValue={updateSearchValue}\r\n          clearSearchValue={clearSearchValue}\r\n          handleSearch={handleSearch}\r\n          setFocus={setFocus}\r\n        />\r\n        {hasFocus &&\r\n          <AutoSuggestion\r\n            suggestionList={suggestionList}\r\n            updateSearchValue={updateSearchValue}\r\n            updateTicker={updateTicker}\r\n            setFocus={setFocus}\r\n          />\r\n        }\r\n      </div>\r\n    </ClickAwayListener>\r\n  );\r\n}\r\n\r\nexport default SearchForm","import { Table, TableBody, TableCell, TableRow } from '@material-ui/core';\r\nimport React from 'react';\r\nimport './DataTable.css';\r\n\r\nfunction DataTable(props) {\r\n  const list = props.list;\r\n\r\n  let tableEntries = [];\r\n  if (list !== undefined) {\r\n    list.forEach((value, key) => {\r\n      tableEntries.push(\r\n        <TableRow key={key}>\r\n          <TableCell className=\"label\">{key}</TableCell>\r\n          <TableCell align=\"right\">{value}</TableCell>\r\n        </TableRow>\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Table>\r\n      <TableBody>\r\n        {tableEntries}\r\n      </TableBody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport default DataTable","import React, { useEffect, useState } from 'react';\r\nimport { Card, CardContent, CardHeader, Divider, Button, Typography } from '@material-ui/core';\r\nimport DataTable from './DataTable';\r\nimport './AboutCard.css';\r\n\r\nfunction AboutCard(props) {\r\n  const description = props.description;\r\n  const aboutList = props.aboutList;\r\n\r\n  const [isHidden, setIsHidden] = useState(true);\r\n  const [headerDescription, setHeaderDescription] = useState(null);\r\n  useEffect(() => {\r\n    let ellipsisStyle = {\r\n      display: (isHidden) ? 'inline' : 'none'\r\n    }\r\n  \r\n    let moreTextStyle = {\r\n      display: (isHidden) ? 'none' : 'inline'\r\n    }\r\n  \r\n    let buttonText = (isHidden) ? 'Show more' : 'Show less';\r\n\r\n    function handleButtonClick() {\r\n      setIsHidden(!isHidden);\r\n    }\r\n\r\n    if (description.length > 350) {\r\n      setHeaderDescription(\r\n        <>\r\n          <Typography variant=\"subtitle1\">\r\n            {description.slice(0, 350)}\r\n            <span style={ellipsisStyle}>...</span>\r\n            <span style={moreTextStyle}>{description.slice(256)}</span>\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            disableElevation={true}\r\n            onClick={handleButtonClick}\r\n            className=\"button\"\r\n          >\r\n            <Typography variant=\"subtitle1\">\r\n              {buttonText}\r\n            </Typography>\r\n          </Button>\r\n        </>\r\n      );\r\n    } else {\r\n      setHeaderDescription(\r\n        <Typography variant=\"subtitle1\" paragraph={true}>\r\n          {(description !== '0') ? description : 'No description'}\r\n        </Typography>\r\n      );\r\n    }\r\n  }, [description, isHidden]);\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        title=\"About\"\r\n      />\r\n      <CardContent className=\"content\">\r\n        {headerDescription}\r\n        <Divider />\r\n        <DataTable list={aboutList} />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default AboutCard","import React from 'react';\r\nimport { Card, CardHeader, CardContent } from '@material-ui/core';\r\nimport DataTable from './DataTable';\r\nimport './KeyStatsCard.css';\r\n\r\nfunction KeyStatsCard(props) {\r\n  const keyStatList = props.keyStatList;\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        title=\"Key stats\"\r\n      />\r\n      <CardContent className=\"content\">\r\n        <DataTable list={keyStatList} />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default KeyStatsCard","import { enUS } from 'date-fns/locale';\r\nimport Chart from 'chart.js/auto';\r\n\r\nexport class ChartMaker {\r\n  constructor(chartContainer, chartData, dateRange, isChangePositive = true) {\r\n    this.chartContainer = chartContainer;\r\n    const gradient = this.getGradient(chartContainer.current, isChangePositive);\r\n\r\n    const dataOptions = this.chartConfig.data.datasets[0];\r\n    dataOptions.data = chartData;\r\n    dataOptions.backgroundColor = gradient;\r\n    dataOptions.borderColor = this.getBorderColor(isChangePositive);\r\n\r\n    this.setDateRangeOptions(this.chartConfig, dateRange);\r\n  }\r\n\r\n  getGradient(chartContainer, isChangePositive) {\r\n    const height = chartContainer.height;\r\n    const ctx = chartContainer.getContext('2d');\r\n    let gradient = ctx.createLinearGradient(0, 0, 0, height);\r\n\r\n    (isChangePositive)\r\n      ? gradient.addColorStop(0, 'rgb(221, 242, 229)')\r\n      : gradient.addColorStop(0, 'rgb(253, 191, 188)');\r\n\r\n    gradient.addColorStop(1, 'white');\r\n    return gradient;\r\n  }\r\n\r\n  getBorderColor(isChangePositive) {\r\n    return (isChangePositive) ? 'rgb(5, 168, 88)' : 'rgb(244,62,62)';\r\n  }\r\n\r\n  setDateRangeOptions(config, dateRange) {\r\n    let xScale = config.options.scales.x;\r\n\r\n    switch (dateRange) {\r\n      case '1D':\r\n        let date = new Date();\r\n        date.setHours(16);\r\n        date.setMinutes(0);\r\n        date.setSeconds(0);\r\n\r\n        xScale.time.unit = 'hour';\r\n        xScale.type = 'time';\r\n        xScale.max = date;\r\n        xScale.time.tooltipFormat = 'MMM dd, yyyy hh:mm a';\r\n        break;\r\n      case '5D':\r\n        xScale.time.unit = 'day';\r\n        xScale.type = 'timeseries';\r\n        delete xScale.max;\r\n        xScale.time.tooltipFormat = 'MMM dd, yyyy hh:mm a';\r\n        break;\r\n      case '1M':\r\n        xScale.time.unit = 'week';\r\n        xScale.type = 'time';\r\n        delete xScale.max;\r\n        xScale.time.tooltipFormat = 'MMM dd, yyyy';\r\n        break;\r\n      case '6M':\r\n        xScale.time.unit = 'month';\r\n        xScale.type = 'time';\r\n        delete xScale.max;\r\n        xScale.time.tooltipFormat = 'MMM dd, yyyy';\r\n        break;\r\n      case 'YTD':\r\n        xScale.time.unit = 'month';\r\n        xScale.type = 'time';\r\n        delete xScale.max;\r\n        xScale.time.tooltipFormat = 'MMM dd, yyyy';\r\n        break;\r\n      case '1Y':\r\n        xScale.time.unit = 'quarter';\r\n        xScale.type = 'time';\r\n        delete xScale.max;\r\n        xScale.time.tooltipFormat = 'MMM dd, yyyy';\r\n        break;\r\n      case '5Y':\r\n        xScale.time.unit = 'year';\r\n        xScale.type = 'time';\r\n        delete xScale.max;\r\n        xScale.time.tooltipFormat = 'MMM dd, yyyy';\r\n        break;\r\n      default:\r\n        console.log('Uncaught date range');\r\n    }\r\n  }\r\n\r\n  getChart() {\r\n    const config = this.chartConfig;\r\n    return new Chart(this.chartContainer.current, config);\r\n  }\r\n\r\n  chartConfig = {\r\n    type: 'line',\r\n    data: {\r\n      datasets: [{\r\n        label: 'Quote',\r\n        data: [],\r\n        backgroundColor: '',\r\n        borderColor: '',\r\n        fill: 'start',\r\n        pointRadius: 0,\r\n        spanGaps: true\r\n      }]\r\n    },\r\n    options: {\r\n      adapter: {\r\n        date: {\r\n          locale: enUS\r\n        }\r\n      },\r\n      plugins: {\r\n        legend: {\r\n          display: false\r\n        },\r\n        tooltip: {\r\n          intersect: false,\r\n          displayColors: false,\r\n        }\r\n      },\r\n      scales: {\r\n        x: {\r\n          type: 'time',\r\n          time: {\r\n            unit: '',\r\n            displayFormats: {\r\n              hour: 'hh:mm a',\r\n              day: 'MMM dd',\r\n              week: 'MMM dd',\r\n              month: 'MMM yyyy',\r\n              quarter: 'MMM yyyy',\r\n              year: 'yyyy'\r\n            },\r\n            tooltipFormat: '',\r\n          },\r\n          grid: {\r\n            display: false,\r\n          },\r\n        },\r\n        y: {\r\n          tick: { \r\n            callback: function(value) {\r\n              const formatter = new Intl.NumberFormat('en-US', {minimumFractionDigits: 2, maximumFractionDigits: 2})\r\n              return formatter(value) \r\n            }\r\n          }\r\n        }\r\n      },\r\n      responsive: true,\r\n      maintainAspectRatio: false\r\n    }\r\n  }\r\n}","import React, { useEffect, useState, useRef } from 'react';\r\nimport 'chartjs-adapter-date-fns';\r\nimport { ChartMaker } from '../../services/ChartMaker';\r\nimport './StockPriceChart.css';\r\n\r\nfunction StockPriceChart(props) {\r\n  const chartData = props.chartData;\r\n  const dateRange = props.dateRange;\r\n  const isChangePositive = props.isChangePositive;\r\n\r\n  const chartContainer = useRef(null);\r\n  const [chartInstance, setChartInstance] = useState(null);\r\n  useEffect(() => {\r\n    if (chartContainer !== null) {\r\n      setChartInstance(prevChart => {\r\n        if (prevChart !== null) {\r\n          prevChart.destroy();\r\n          const chartMaker = new ChartMaker(chartContainer, chartData, dateRange);\r\n          return chartMaker.getChart();\r\n        } else {\r\n          const chartMaker = new ChartMaker(chartContainer, chartData, dateRange);\r\n          return chartMaker.getChart();    \r\n        }\r\n      });\r\n    }\r\n  }, [chartContainer, chartData, dateRange]);\r\n\r\n  // Conditionally update chart color\r\n  useEffect(() => {\r\n    if (chartInstance !== null) {\r\n      const height = chartContainer.current.height;\r\n      const ctx = chartContainer.current.getContext('2d');\r\n      let gradient = ctx.createLinearGradient(0, 0, 0, height);\r\n\r\n      (isChangePositive)\r\n        ? gradient.addColorStop(0, 'rgb(221, 242, 229)')\r\n        : gradient.addColorStop(0, 'rgb(253, 191, 188)');\r\n      gradient.addColorStop(1, 'white');\r\n\r\n      const borderColor = (isChangePositive) ? 'rgb(5, 168, 88)' : 'rgb(244,62,62)';\r\n\r\n      chartInstance.data.datasets[0].backgroundColor = gradient;\r\n      chartInstance.data.datasets[0].borderColor = borderColor;\r\n      chartInstance.update();\r\n    }\r\n  }, [chartContainer, chartInstance, isChangePositive]);\r\n\r\n  return (\r\n    <div className=\"chart-container\">\r\n      <canvas\r\n        id=\"stock-chart\"\r\n        ref={chartContainer}\r\n        aria-label=\"stock price graph\"\r\n        role=\"img\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StockPriceChart","import React from 'react';\r\nimport { ToggleButtonGroup, ToggleButton } from '@material-ui/lab/index'\r\nimport { Typography } from '@material-ui/core';\r\nimport './DateToggleButton.css';\r\n\r\nfunction DateToggleButtons(props) {\r\n  let dateRange = props.dateRange;\r\n  let handleDateClick = props.handleDateClick;\r\n\r\n  return (\r\n    <ToggleButtonGroup\r\n      value={dateRange}\r\n      className=\"toggle-button-group\"\r\n      exclusive\r\n      onChange={handleDateClick}\r\n      size=\"small\"\r\n      aria-label=\"date range\"\r\n    >\r\n      <ToggleButton \r\n        value=\"1D\" \r\n        aria-label=\"1 day\"\r\n        className=\"toggle-button\"\r\n      >\r\n        <Typography variant=\"subtitle1\">1D</Typography>\r\n      </ToggleButton>\r\n      <ToggleButton \r\n        value=\"5D\" \r\n        aria-label=\"5 days\"\r\n        className=\"toggle-button\"\r\n      >\r\n        <Typography variant=\"subtitle1\">5D</Typography>\r\n      </ToggleButton>\r\n      <ToggleButton \r\n        value=\"1M\" \r\n        aria-label=\"1 month\"\r\n        className=\"toggle-button\"\r\n      >\r\n        <Typography variant=\"subtitle1\">1M</Typography>\r\n      </ToggleButton>\r\n      <ToggleButton \r\n        value=\"6M\" \r\n        aria-label=\"6 months\"\r\n        className=\"toggle-button\"\r\n      >\r\n        <Typography variant=\"subtitle1\">6M</Typography>\r\n      </ToggleButton>\r\n      <ToggleButton \r\n        value=\"YTD\" \r\n        aria-label=\"year to date\"\r\n        className=\"toggle-button\"\r\n      >\r\n        <Typography variant=\"subtitle1\">YTD</Typography>\r\n      </ToggleButton>\r\n      <ToggleButton \r\n        value=\"1Y\" \r\n        aria-label=\"1 year\"\r\n        className=\"toggle-button\"\r\n      >\r\n        <Typography variant=\"subtitle1\">1Y</Typography>\r\n      </ToggleButton>\r\n      <ToggleButton \r\n        value=\"5Y\" \r\n        aria-label=\"5 years\"\r\n        className=\"toggle-button\"\r\n      >\r\n        <Typography variant=\"subtitle1\">5Y</Typography>\r\n      </ToggleButton>\r\n    </ToggleButtonGroup>\r\n  );\r\n}\r\n\r\nexport default DateToggleButtons","import React, { useEffect, useState } from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport { ArrowUpward, ArrowDownward } from '@material-ui/icons';\r\nimport './PriceChangePercent.css';\r\n\r\nfunction PriceChangePercent(props) {\r\n  const isChangePositive = props.isChangePositive;\r\n  const percentChange = props.percentChange;\r\n\r\n  const [percentText, setPercentText] = useState('');\r\n  useEffect(() => {\r\n    const formatter = new Intl.NumberFormat('en-US', {\r\n      style: 'percent',\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n      signDisplay: 'never'\r\n    });\r\n\r\n    if (percentChange !== null) {\r\n      setPercentText(formatter.format(percentChange));\r\n    }\r\n  }, [percentChange])\r\n\r\n  let negativeStyle = {\r\n    backgroundColor: 'rgb(254,232,230)',\r\n    color: 'rgb(184,37,47)',\r\n  }\r\n\r\n  let positiveStyle = {\r\n    backgroundColor: 'rgb(229,244,234)',\r\n    color: 'rgb(58,147,98)',\r\n  }\r\n\r\n  return (\r\n    <div \r\n      className=\"percent-box\"\r\n      style={(isChangePositive)\r\n        ? positiveStyle\r\n        : negativeStyle\r\n      }\r\n      aria-label={ (isChangePositive)\r\n        ? `Up by ${percentText}`\r\n        : `Down by ${percentText}`\r\n      }\r\n    >\r\n      { (isChangePositive)\r\n        ? <ArrowUpward \r\n            className=\"direction-icon\"\r\n            aria-hidden=\"true\"\r\n          />\r\n        : <ArrowDownward \r\n            className=\"direction-icon\"\r\n            aria-hidden=\"true\"\r\n          />\r\n      }\r\n      <Typography className=\"percent-change\">\r\n        {percentText}\r\n      </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PriceChangePercent","import React, { useEffect, useState } from 'react'\r\nimport { Typography } from '@material-ui/core';\r\nimport './PriceChangeAmount.css';\r\n\r\nfunction PriceChangeAmount(props) {\r\n  const isChangePositive = props.isChangePositive;\r\n  const amountChange = props.amountChange;\r\n  const dateRange = props.dateRange;\r\n\r\n  const [amountText, setAmountText] = useState('');\r\n  useEffect(() => {\r\n    const formatter = new Intl.NumberFormat('en-US', {\r\n      style: 'decimal',\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n      signDisplay: 'always'\r\n    });\r\n\r\n    if (amountChange !== null){\r\n      const dateLabel = (dateRange !== '1D') ? dateRange : 'Today';\r\n      const changeString = formatter.format(amountChange) + ' ' + dateLabel;\r\n      setAmountText(changeString);\r\n    }\r\n  }, [amountChange, dateRange]);\r\n\r\n  let negativeStyle = {\r\n    color: 'rgb(184,37,47)',\r\n  }\r\n\r\n  let positiveStyle = {\r\n    color: 'rgb(58,147,98)',\r\n  }\r\n\r\n  return (\r\n    <Typography \r\n      className=\"amount-change\"\r\n      style={ (isChangePositive)\r\n        ? positiveStyle\r\n        : negativeStyle\r\n      }\r\n    >\r\n      {amountText}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default PriceChangeAmount","import React, { useEffect, useState } from 'react';\r\nimport { CardHeader, Chip, Typography } from '@material-ui/core';\r\nimport './ChartHeader.css';\r\nimport { ApiClient } from '../../services/Api';\r\n\r\nimport PriceChangePercent from './PriceChangePercent';\r\nimport PriceChangeAmount from './PriceChangeAmount';\r\n\r\nfunction ChartHeader(props) {\r\n  const selectedTicker = props.selectedTicker;\r\n  const selectedName = props.selectedName;\r\n  const dateRange = props.dateRange;\r\n  const chartData = props.chartData;\r\n  const isChangePositive = props.isChangePositive;\r\n  const handlePriceChange = props.handlePriceChange;\r\n\r\n  const [lastQuote, setLastQuote] = useState(null);\r\n  const [updateTime, setUpdateTime] = useState(null);\r\n  useEffect(() => {\r\n    const dateOptions = {\r\n      dateStyle: 'long',\r\n      timeStyle: 'long',\r\n      timeZone: 'America/New_York'\r\n    }\r\n    const dateFormatter = new Intl.DateTimeFormat('en-US', dateOptions)\r\n\r\n    async function getQuote() {\r\n      const apiClient = new ApiClient();\r\n      apiClient.getQuote(selectedTicker)\r\n        .then(res => {\r\n          setUpdateTime(dateFormatter.format(new Date(res.t * 1000)))\r\n          setLastQuote(res.c)\r\n        });\r\n    }\r\n    \r\n    if (selectedTicker !== '') {\r\n      setLastQuote(null)\r\n      getQuote();\r\n    }\r\n  }, [selectedTicker])\r\n\r\n  const [amountChange, setAmountChange] = useState(null);\r\n  useEffect(() => {\r\n    if (chartData !== undefined) {\r\n      const startPrice = chartData[0].y;\r\n      const change = lastQuote - startPrice;\r\n      handlePriceChange((change >= 0) ? true: false);\r\n      setAmountChange(change);\r\n    }\r\n  }, [chartData, lastQuote, handlePriceChange])\r\n\r\n  const [percentChange, setPercentChange] = useState(null);\r\n  useEffect(() => {\r\n    if (chartData !== undefined) {\r\n      const startPrice = chartData[0].y;\r\n      const percentChange = (lastQuote - startPrice) / startPrice;\r\n      setPercentChange(percentChange);\r\n    }\r\n  }, [chartData, lastQuote])\r\n\r\n  const currencyFormatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 2,\r\n    maximumFractionDigits: 2,\r\n  });\r\n\r\n  let header = (\r\n    <>\r\n      <Typography variant=\"h1\">\r\n        {selectedName}\r\n      </Typography>\r\n      { chartData &&\r\n        <>\r\n          <div className=\"stock-performance\">\r\n            <span>\r\n              <Typography className=\"last-quote\" >\r\n                {currencyFormatter.format(lastQuote)}\r\n              </Typography>\r\n            </span>\r\n            <PriceChangePercent\r\n              isChangePositive={isChangePositive}\r\n              percentChange={percentChange}\r\n            />\r\n            <PriceChangeAmount\r\n              isChangePositive={isChangePositive}\r\n              amountChange={amountChange}\r\n              dateRange={dateRange}\r\n            />\r\n          </div>\r\n          <Typography variant=\"subtitle1\" className=\"last-updated\">\r\n            {updateTime}\r\n          </Typography>\r\n        </>\r\n      }\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <CardHeader\r\n      title={header}\r\n      disableTypography={true}\r\n      action={\r\n        <Chip\r\n          color=\"primary\"  \r\n          label={selectedTicker}\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default ChartHeader","import { parse } from \"date-fns\";\r\n\r\nexport const chartDataFormatter = {\r\n  parse1D,\r\n  parse5D,\r\n  parse1M,\r\n  parse6M,\r\n  parseYTD,\r\n  parse1Y,\r\n  parse5Y\r\n}\r\n\r\n    /* JS Date function by default uses the system local time. Assume to be Eastern time.\r\n    *  TO DO: make adjustments to account for local time zones and daylight savings\r\n    */\r\n\r\nfunction parse1D(data) { \r\n  function parseDate(el) {\r\n    let dateString = `${el.date} ${el.minute}`;\r\n    return parse(dateString, 'yyyy-MM-dd HH:mm', new Date());\r\n  }\r\n  \r\n  const results = [];\r\n  data.forEach(el => {\r\n    // Skip null entries\r\n    if (el.close !== null) {\r\n      const entry = {\r\n        x: parseDate(el),\r\n        y: el.close,\r\n        volume: el.volume\r\n      }\r\n      \r\n      results.push(entry);\r\n    }\r\n  });\r\n  \r\n  // Sort result by date\r\n  results.sort((a,b) => a.x - b.x);\r\n\r\n  return results;\r\n}\r\n\r\nfunction parse5D(data) {\r\n  let refreshDate = data['Meta Data']['3. Last Refreshed'];\r\n  let endDate = parse(refreshDate, 'yyyy-MM-dd HH:mm:ss', new Date());\r\n  endDate.setMinutes(0);\r\n  endDate.setHours(16);\r\n\r\n  const dateOffset = 7 * 60 * 60 * 24 * 1000;\r\n\r\n  let startDate = new Date(endDate - dateOffset);\r\n  startDate.setMinutes(30);\r\n  startDate.setHours(9);\r\n\r\n  const results = [];\r\n  const timeSeriesData = data['Time Series (30min)'];\r\n\r\n  for (let key in timeSeriesData) {\r\n    const currentDate = parse(key, 'yyyy-MM-dd HH:mm:ss', new Date());\r\n\r\n    if (currentDate >= startDate && currentDate <= endDate) {\r\n      // Check if time is between 9:30am to 4pm ET\r\n      let startTime = new Date(currentDate);\r\n      startTime.setMinutes(30);\r\n      startTime.setHours(9);\r\n\r\n      let endTime = new Date(currentDate);\r\n      endTime.setMinutes(0);\r\n      endTime.setHours(16);\r\n\r\n      if (currentDate >= startTime && currentDate <= endTime) {\r\n        const entry = {\r\n          x: currentDate,\r\n          y: timeSeriesData[key]['4. close'],\r\n          volume: timeSeriesData[key]['5. volume']\r\n        }\r\n    \r\n        results.push(entry);\r\n      }\r\n    }\r\n  }\r\n  \r\n  // Sort result by date\r\n  results.sort((a,b) => a.x - b.x);\r\n\r\n  return results;\r\n}\r\n\r\nfunction parse1M(data) {\r\n  const endDate = new Date();\r\n  const startDate = new Date(endDate - 30 * 60 * 60 * 24 * 1000);\r\n\r\n  let results = parseDailyData(data, startDate, endDate)\r\n  \r\n  // Sort result by date\r\n  results.sort((a, b) => a.x - b.x);\r\n\r\n  return results;\r\n}\r\n\r\nfunction parse6M(data) {\r\n  const endDate = new Date();\r\n  const startDate = new Date(endDate - 6 * 30 * 60 * 60 * 24 * 1000);\r\n  \r\n  let results = parseDailyData(data, startDate, endDate)\r\n  \r\n  // Sort result by date\r\n  results.sort((a, b) => a.x - b.x);\r\n\r\n  return results;\r\n}\r\n\r\nfunction parseYTD(data) {\r\n  const endDate = new Date();\r\n  const startDate = new Date(endDate.getFullYear(),0,1);\r\n  \r\n  let results = parseDailyData(data, startDate, endDate)\r\n  \r\n  // Sort result by date\r\n  results.sort((a, b) => a.x - b.x);\r\n\r\n  return results;\r\n}\r\n\r\nfunction parse1Y(data) {\r\n  const endDate = new Date();\r\n  const startDate = new Date(endDate - 365 * 60 * 60 * 24 * 1000);\r\n\r\n  let results = parseDailyData(data, startDate, endDate)\r\n  \r\n  // Sort result by date\r\n  results.sort((a, b) => a.x - b.x);\r\n\r\n  return results;\r\n}\r\n\r\nfunction parse5Y(data) {\r\n  const refreshDate = data['Meta Data']['3. Last Refreshed'];\r\n  const endDate = parse(refreshDate, 'yyyy-MM-dd', new Date());\r\n  const dateOffset = 5 * 365 * 60 * 60 * 24 * 1000;\r\n\r\n  const startDate = new Date(endDate - dateOffset);\r\n  \r\n  const results = [];\r\n  const timeSeriesData = data['Weekly Time Series'];\r\n\r\n  for (let key in timeSeriesData) {\r\n    const currentDate = parse(key, 'yyyy-MM-dd', new Date());\r\n\r\n    if (currentDate >= startDate && currentDate <= endDate) {\r\n      const entry = {\r\n        x: currentDate,\r\n        y: timeSeriesData[key]['4. close'],\r\n        volume: timeSeriesData[key]['5. volume']\r\n      }\r\n\r\n      results.push(entry);\r\n    }\r\n  }\r\n\r\n  // Sort result by date\r\n  results.sort((a, b) => a.x - b.x);\r\n  return results;\r\n}\r\n\r\nfunction parseDailyData(data, startDate, endDate) {\r\n  const results = [];\r\n  \r\n  data.forEach(el => {\r\n    const currentDate = new Date(el.t);\r\n\r\n    if (currentDate >= startDate && currentDate <= endDate) {\r\n      const entry = {\r\n        x: currentDate,\r\n        y: el.c,\r\n        volume: el.v\r\n      }\r\n  \r\n      results.push(entry);\r\n    }\r\n  });\r\n\r\n  return results;\r\n}","import { useState, useEffect } from 'react';\r\nimport { ApiClient } from '../../services/Api';\r\nimport { chartDataFormatter } from '../../services/ChartDataFormatter';\r\n\r\nexport function useChartData(dateRange, ticker) {\r\n  const [chartData1D, setChartData1D] = useState(undefined);\r\n  const [chartData5D, setChartData5D] = useState(undefined);\r\n  const [chartData1M, setChartData1M] = useState(undefined);\r\n  const [chartData6M, setChartData6M] = useState(undefined);\r\n  const [chartDataYTD, setChartDataYTD] = useState(undefined);\r\n  const [chartData1Y, setChartData1Y] = useState(undefined);\r\n  const [chartData5Y, setChartData5Y] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    if (ticker !== '') {\r\n      const apiClient = new ApiClient();\r\n      // Clear current data\r\n      setChartData1D(undefined);\r\n      setChartData5D(undefined);\r\n      setChartData1M(undefined);\r\n      setChartData6M(undefined);\r\n      setChartDataYTD(undefined);\r\n      setChartData1Y(undefined);\r\n      setChartData5Y(undefined);\r\n\r\n      // API calls\r\n      apiClient.getIntradayQuotes(ticker)\r\n        .then(res => {\r\n          if (isMounted) {\r\n            setChartData1D(chartDataFormatter.parse1D(res));\r\n          }\r\n        })\r\n        .catch(err => console.log('Intraday quote fetch failed: ' + err));\r\n\r\n      apiClient.getFiveDayQuotes(ticker)\r\n        .then(res => (isMounted)\r\n          ? setChartData5D(chartDataFormatter.parse5D(res))\r\n          : undefined\r\n        )\r\n        .catch(err => console.log('Five day quote fetch failed: ' + err));\r\n\r\n      apiClient.getAnnualQuotes(ticker)\r\n        .then(res => (isMounted)\r\n          ? setChartData5D(setAnnualData(res))\r\n          : undefined\r\n        )\r\n        .catch(err => console.log('Annual data fetch failed: ' + err));\r\n\r\n      apiClient.getFiveYearQuotes(ticker)\r\n        .then(res => (isMounted)\r\n          ? setChartData5Y(chartDataFormatter.parse5Y(res))\r\n          : undefined\r\n        )\r\n        .catch(err => console.log('Five year quote fetch failed: ' + err));\r\n\r\n      function setAnnualData(apiData) {\r\n        const timeSeriesData = apiData.results;\r\n\r\n        setChartData1M(chartDataFormatter.parse1M(timeSeriesData))\r\n        setChartData6M(chartDataFormatter.parse6M(timeSeriesData))\r\n        setChartDataYTD(chartDataFormatter.parseYTD(timeSeriesData))\r\n        setChartData1Y(chartDataFormatter.parse1Y(timeSeriesData))\r\n      }\r\n    }\r\n\r\n    // Do not fetch suggestion list if component is unmounted\r\n    return function cleanup() {\r\n      isMounted = false;\r\n    }\r\n  }, [ticker]);\r\n\r\n  switch (dateRange) {\r\n    case '1D':\r\n      return chartData1D;\r\n    case '5D':\r\n      return chartData5D;\r\n    case '1M':\r\n      return chartData1M;\r\n    case '6M':\r\n      return chartData6M;\r\n    case 'YTD':\r\n      return chartDataYTD;\r\n    case '1Y':\r\n      return chartData1Y;\r\n    case '5Y':\r\n      return chartData5Y;\r\n    default:\r\n      return console.log('Uncaught date range');\r\n  }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Card, CardContent } from '@material-ui/core';\r\nimport StockPriceChart from './StockPriceChart';\r\nimport DateToggleButtons from './DateToggleButtons';\r\nimport ChartHeader from './ChartHeader';\r\nimport { useChartData } from './ChartHooks';\r\nimport './ChartCard.css';\r\n\r\nfunction ChartCard(props) {\r\n  const selectedTicker = props.selectedTicker;\r\n  const selectedName = props.selectedName;\r\n\r\n  const [dateRange, setDateRange] = useState('1D');\r\n  const handleDateClick = (e, newDate) => {\r\n    if (newDate !== null) {\r\n      setDateRange(newDate);\r\n    }\r\n  }\r\n\r\n  // Fetch data on ticker change\r\n  const chartData = useChartData(dateRange, selectedTicker);\r\n  useEffect(() => {\r\n    // Reset to 1 day view on new ticker selected\r\n    setDateRange('1D');\r\n  }, [selectedTicker]);\r\n\r\n  const [isChangePositive, setIsChangePositive] = useState(null);\r\n  function handlePriceChange(isPositive) {\r\n    setIsChangePositive(isPositive);\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <ChartHeader\r\n        selectedTicker={selectedTicker}\r\n        selectedName={selectedName}\r\n        dateRange={dateRange}\r\n        chartData={chartData}\r\n        isChangePositive={isChangePositive}\r\n        handlePriceChange={handlePriceChange}\r\n      />\r\n      <CardContent className=\"content\">\r\n        <DateToggleButtons\r\n          dateRange={dateRange}\r\n          handleDateClick={handleDateClick}\r\n        />\r\n        <div>\r\n          {chartData && dateRange &&\r\n            <StockPriceChart\r\n              dateRange={dateRange}\r\n              chartData={chartData}\r\n              isChangePositive={isChangePositive}\r\n            />\r\n          }\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ChartCard","import React, { useState, useEffect } from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport { ApiClient } from '../services/Api';\r\nimport AboutCard from './other/AboutCard';\r\nimport KeyStatsCard from './other/KeyStatsCard';\r\nimport ChartCard from './chart/ChartCard';\r\nimport './StockOverview.css';\r\n\r\nfunction StockOverview(props) {\r\n  const selectedTicker = props.selectedTicker;\r\n  const selectedName = props.selectedName;\r\n\r\n  const [aboutList, setAboutList] = useState(undefined);\r\n  const [keyStatList, setKeyStatList] = useState(undefined);\r\n  const [description, setDescription] = useState('');\r\n\r\n  // Update the About Card\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    if (selectedTicker !== '') {\r\n      const apiClient = new ApiClient();\r\n\r\n      apiClient.getCompanyOverview(selectedTicker)\r\n        .then(res => (isMounted) ? updateAboutCard(res) : undefined)\r\n        .catch(err => console.log('Error retrieving About data: ' + err));\r\n    }\r\n    \r\n    function updateAboutCard(apiData) {\r\n      const wholeNumber = new Intl.NumberFormat('en-US');\r\n\r\n      setDescription(apiData.description);\r\n\r\n      setAboutList(new Map([\r\n        ['sector', apiData.sector],\r\n        ['industry', apiData.industry],\r\n        ['headquarters', formatAddress(apiData)],\r\n        ['employees', formatNumber(apiData.employees, wholeNumber)]\r\n      ]));\r\n    }\r\n\r\n    return function cleanup() {\r\n      isMounted = false;\r\n    }\r\n  }, [selectedTicker]);\r\n\r\n  // Update Key Stats Card\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    if (selectedTicker !== '') {\r\n      fetchData();\r\n    }\r\n    \r\n    async function fetchData() {\r\n      const currency = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD',\r\n        minimumFractionDigits: 2,\r\n        maximumFractionDigits: 2,\r\n      });\r\n      const decimal = new Intl.NumberFormat('en-US', {\r\n        style: 'decimal',\r\n        minimumFractionDigits: 2,\r\n        maximumFractionDigits: 2,\r\n      });\r\n      const percentage = new Intl.NumberFormat('en-US', {\r\n        style: 'percent',\r\n        minimumFractionDigits: 2,\r\n        maximumFractionDigits: 2,\r\n      });\r\n\r\n      const apiClient = new ApiClient();\r\n\r\n      let keyStatMap = new Map([\r\n        ['previous close', null],\r\n        ['day range', null],\r\n        ['year range', null],\r\n        ['market cap', null],\r\n        ['volume', null],\r\n        ['p/e ratio', null],\r\n        ['dividend yield', null],\r\n        ['eps', null]\r\n      ]);\r\n    \r\n      // Fetch key stats data from api\r\n      const keyStatsProm = await apiClient.getKeyStats(selectedTicker)\r\n        .then(res => updateKeyStats(res))\r\n        .catch(err => console.log('Error retrieving Key Stats: ' + err));\r\n\r\n      // Fetch previous quote data from api\r\n      const quoteProm = await apiClient.getPreviousDayQuote(selectedTicker)\r\n        .then(res => updateQuote(res))\r\n        .catch(err => console.log('Error retrieving previous day quote: ' + err));\r\n\r\n      function updateKeyStats(apiData) {\r\n        keyStatMap.set('year range', formatNumber(apiData.week52low, currency) + \" - \" +\r\n          formatNumber(apiData.week52high, currency));\r\n        keyStatMap.set('market cap', abbreviateNumber(apiData.marketcap) + ' USD');\r\n        keyStatMap.set('p/e ratio', formatNumber(apiData.peRatio, decimal));\r\n        keyStatMap.set('dividend yield', formatNumber(apiData.dividendYield, percentage));\r\n        keyStatMap.set('eps', formatNumber(apiData.ttmEPS, decimal));      \r\n      }\r\n\r\n      function updateQuote(apiData) {\r\n        keyStatMap.set('previous close', formatNumber(apiData.close, decimal));\r\n        keyStatMap.set('day range', formatNumber(apiData.low, currency) + \" - \" +\r\n          formatNumber(apiData.high, currency));\r\n        keyStatMap.set('volume', abbreviateNumber(apiData.volume));\r\n      }\r\n\r\n      Promise.all([keyStatsProm, quoteProm])\r\n        .then((isMounted) ? setKeyStatList(keyStatMap) : undefined);\r\n    }\r\n\r\n    return function cleanup() {\r\n      isMounted = false;\r\n    }\r\n  }, [selectedTicker]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"chart-card\">\r\n        <ChartCard\r\n          selectedTicker={selectedTicker}\r\n          selectedName={selectedName}\r\n        />\r\n      </div>\r\n      <div className=\"key-stat-card\">\r\n        {keyStatList &&\r\n          <KeyStatsCard\r\n            keyStatList={keyStatList}\r\n          />\r\n        }\r\n      </div>\r\n      <div className=\"about-card\">\r\n        {aboutList &&\r\n          <AboutCard\r\n            description={description}\r\n            aboutList={aboutList}\r\n          />\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction formatAddress(data) {\r\n  return (\r\n    <>\r\n      <Typography variant=\"body2\">\r\n        {data.address}\r\n      </Typography>\r\n      { data.address2 &&\r\n        <Typography variant=\"body2\">\r\n          {data.address2}\r\n        </Typography>\r\n      }\r\n      <Typography variant=\"body2\">\r\n        {data.city + ', ' + data.state}\r\n      </Typography>\r\n      <Typography variant=\"body2\">\r\n        {data.country}\r\n      </Typography>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction formatNumber(value, formatter) {\r\n  if (!isNaN(value)) {\r\n    return formatter.format(value);\r\n  } else {\r\n    return 'N/A';\r\n  }\r\n}\r\n\r\nfunction abbreviateNumber(amount) {\r\n  if (amount < 1000) {\r\n    return amount;\r\n  }\r\n\r\n  const digits = Math.floor(Math.log10(amount) + 1);\r\n\r\n  // Adjustment down if exactly divisible by 3, e.g. 100,000 = 100K not 0.1M\r\n  const thousands = Math.floor(digits / 3) - (digits % 3 === 0);\r\n  const symbol = \"KMBT\".charAt(thousands - 1);\r\n  const roundedNum = (amount / Math.pow(10, thousands * 3)).toFixed(2);\r\n\r\n  return roundedNum + symbol;\r\n}\r\n\r\nexport default StockOverview","import React from 'react';\r\nimport { Container, Divider, IconButton, Typography } from '@material-ui/core';\r\nimport './Footer.css';\r\nimport { Email, GitHub, LinkedIn } from '@material-ui/icons';\r\n\r\nfunction Footer(props) {\r\n  const linkedInUrl = 'https://www.linkedin.com/in/kevinliou'\r\n  const gitHubUrl = 'https://github.com/kevliou/stock-screener'\r\n\r\n  function handleOpenUrlInNewTab(url) {\r\n    const newWindow = window.open(url, '_blank', 'noopener,noreferrer')\r\n    if (newWindow) newWindow.opener = null\r\n  }\r\n\r\n  function handleSendEmail() {\r\n    window.location.href = 'mailto:kliou879@gmail.com?subject=Greetings!';\r\n  }\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <Container maxWidth=\"md\">\r\n        <Divider className=\"divider\" />\r\n        <div className=\"footer-signature\">\r\n          <Typography\r\n            display=\"block\"\r\n            color=\"secondary\"\r\n            className=\"name\"\r\n          >\r\n            {\"\\u00A9 \" + new Date().getFullYear() + \" Kevin Liou\"}\r\n          </Typography>\r\n          <div>\r\n            <IconButton\r\n              size=\"medium\"\r\n              aria-label=\"Github\"\r\n              color=\"secondary\"\r\n              onClick={() => handleOpenUrlInNewTab(gitHubUrl)}\r\n            >\r\n              <GitHub />\r\n            </IconButton>\r\n            <IconButton\r\n              size=\"medium\"\r\n              aria-label=\"LinkedIn\"\r\n              color=\"secondary\"\r\n              onClick={() => handleOpenUrlInNewTab(linkedInUrl)}\r\n            >\r\n              <LinkedIn />\r\n            </IconButton>\r\n            <IconButton\r\n              size=\"medium\"\r\n              aria-label=\"email\"\r\n              color=\"secondary\"\r\n              onClick={handleSendEmail}\r\n            >\r\n              <Email />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer","import React, { useState } from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport SearchForm from './SearchForm';\r\nimport StockOverview from './StockOverview';\r\nimport Footer from './Footer';\r\nimport './LandingPage.css';\r\n\r\nfunction LandingPage(props) {\r\n  const [selectedTicker, setSelectedTicker] = useState('');\r\n  const [selectedName, setSelectedName] = useState('');\r\n\r\n  function updateSelectedCompany(symbol, companyName) {\r\n    console.log('Selected Ticker: ' + symbol);\r\n    setSelectedTicker(symbol);\r\n    setSelectedName(companyName);\r\n  }\r\n\r\n  function clearSelectedCompany() {\r\n    setSelectedTicker('');\r\n    setSelectedName('');\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Container maxWidth=\"md\">\r\n        <div className=\"search\">\r\n          <section>\r\n            <SearchForm\r\n              selectedTicker={selectedTicker}\r\n              updateSelectedCompany={updateSelectedCompany}\r\n              clearSelectedCompany={clearSelectedCompany}\r\n            />\r\n          </section>\r\n        </div>\r\n        <div className=\"stock-card\">\r\n          <section>\r\n            {selectedTicker &&\r\n              <StockOverview\r\n                selectedTicker={selectedTicker}\r\n                selectedName={selectedName}\r\n              />\r\n            }\r\n          </section>\r\n        </div>\r\n      </Container>\r\n      <Footer className=\"footer\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingPage","import React from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport LandingPage from './components/LandingPage';\n\nfunction App() {\n  let theme = createMuiTheme({\n    palette: {\n      secondary: {\n        main:'#FFFFFF'\n      }\n    },\n    typography: {\n      h1: {\n        fontSize:'1.5rem'\n      },\n      body1:{\n        fontSize:'0.875rem'\n      },\n      body2:{\n        fontSize:'0.875rem'\n      },\n      subtitle1:{\n        fontSize: '0.75rem'\n      }\n    },\n    overrides: {\n      MuiTableRow: {\n        root: {\n          \"&:last-child td\": {\n            borderBottom: 0\n          }\n        }\n      }\n    }\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <LandingPage />\n    </ThemeProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}