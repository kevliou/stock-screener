{"version":3,"sources":["components/search/SearchBar.js","components/search/AutoSuggestion.js","services/SearchProcessor.js","components/SearchForm.js","services/Api.js","components/other/DataTable.js","components/other/AboutCard.js","components/other/KeyStatsCard.js","services/ChartMaker.js","components/chart/StockPriceChart.js","components/chart/DateToggleButtons.js","components/chart/PriceChangePercent.js","components/chart/PriceChangeAmount.js","components/chart/ChartHeader.js","services/ChartDataFormatter.js","components/chart/ChartHooks.js","components/chart/ChartCard.js","components/StockOverview.js","components/Footer.js","components/LandingPage.js","App.js","index.js"],"names":["SearchBar","props","inputValue","updateInputValue","clearInputValue","handleSearch","setFocus","className","InputBase","id","placeholder","autoComplete","onChange","e","target","value","onKeyDown","key","onFocus","select","startAdornment","IconButton","position","size","aria-label","onClick","Search","endAdornment","Close","AutoSuggestion","suggestionItems","suggestionList","undefined","lastItem","length","map","el","index","ListItem","button","divider","ticker","ListItemText","primary","name","secondary","Paper","elevation","List","SearchProcessor","this","tickerLookup","require","suggestions","searchTerm","formattedSearch","formatSearch","results","forEach","entry","push","firstSuggestionTicker","unformattedName","String","toUpperCase","replace","trim","SearchForm","updateSelectedCompany","useState","setInputValue","setSuggestionList","input","searchResult","getFirstSuggestion","useEffect","searchProcessor","getSuggestion","hasFocus","setHasFocus","isFocused","ClickAwayListener","onClickAway","ApiClient","url","instance","axios","create","baseURL","Promise","resolve","reject","get","then","res","data","catch","err","console","log","params","DataTable","list","tableEntries","TableRow","TableCell","align","Table","TableBody","AboutCard","description","aboutList","isHidden","setIsHidden","headerDescription","setHeaderDescription","ellipsisStyle","display","moreTextStyle","buttonText","Typography","variant","slice","style","Button","disableElevation","paragraph","Card","CardHeader","title","CardContent","Divider","KeyStatsCard","keyStatList","ChartMaker","chartContainer","chartData","dateRange","isChangePositive","chartConfig","type","datasets","label","backgroundColor","borderColor","fill","pointRadius","spanGaps","options","adapter","date","locale","enUS","plugins","legend","tooltip","intersect","displayColors","scales","x","time","unit","displayFormats","hour","day","week","month","quarter","year","tooltipFormat","grid","y","tick","callback","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","formatter","responsive","maintainAspectRatio","gradient","getGradient","current","dataOptions","getBorderColor","setDateRangeOptions","height","getContext","createLinearGradient","addColorStop","config","xScale","Date","setHours","setMinutes","setSeconds","max","Chart","StockPriceChart","useRef","chartInstance","setChartInstance","prevChart","destroy","getChart","update","ref","role","DateToggleButtons","handleDateClick","exclusive","PriceChangePercent","percentChange","percentText","setPercentText","signDisplay","format","color","ArrowUpward","aria-hidden","ArrowDownward","PriceChangeAmount","amountChange","amountText","setAmountText","dateLabel","changeString","ChartHeader","selectedTicker","selectedName","handlePriceChange","lastQuote","setLastQuote","updateTime","setUpdateTime","dateFormatter","DateTimeFormat","dateStyle","timeStyle","timeZone","a","getQuote","t","c","setAmountChange","startPrice","change","setPercentChange","currencyFormatter","currency","header","disableTypography","action","Chip","chartDataFormatter","parse1D","parseDate","dateString","minute","parse","close","volume","sort","b","parse5D","refreshDate","endDate","startDate","timeSeriesData","currentDate","startTime","endTime","parse1M","parseDailyData","parse6M","parseYTD","getFullYear","parse1Y","parse5Y","v","useChartData","chartData1D","setChartData1D","chartData5D","setChartData5D","chartData1M","setChartData1M","chartData6M","setChartData6M","chartDataYTD","setChartDataYTD","chartData1Y","setChartData1Y","chartData5Y","setChartData5Y","isMounted","apiClient","getIntradayQuotes","getFiveDayQuotes","getAnnualQuotes","apiData","setAnnualData","getFiveYearQuotes","ChartCard","setDateRange","setIsChangePositive","isPositive","newDate","formatAddress","address","address2","city","state","country","formatNumber","isNaN","abbreviateNumber","amount","digits","Math","floor","log10","thousands","symbol","charAt","pow","toFixed","StockOverview","setAboutList","setKeyStatList","setDescription","getCompanyOverview","wholeNumber","Map","sector","industry","employees","updateAboutCard","updateKeyStats","updateQuote","keyStatMap","set","decimal","low","high","week52low","week52high","marketcap","peRatio","dividendYield","percentage","ttmEPS","getKeyStats","keyStatsProm","getPreviousDayQuote","quoteProm","all","fetchData","Footer","handleOpenUrlInNewTab","newWindow","window","open","opener","Container","maxWidth","GitHub","LinkedIn","location","href","Email","LandingPage","setSelectedTicker","setSelectedName","companyName","App","theme","createMuiTheme","palette","main","typography","h1","fontSize","body1","body2","subtitle1","overrides","MuiTableRow","root","borderBottom","ThemeProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.893450e1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { IconButton, InputBase } from '@material-ui/core';\r\nimport { Search, Close } from '@material-ui/icons';\r\nimport './SearchBar.css';\r\n\r\nfunction SearchBar(props) {\r\n  const inputValue = props.inputValue;\r\n  const updateInputValue = props.updateInputValue;\r\n  const clearInputValue = props.clearInputValue;\r\n  const handleSearch = props.handleSearch;\r\n  const setFocus = props.setFocus;\r\n\r\n  function handleChange(e) {\r\n    updateInputValue(e.target.value);\r\n  }\r\n\r\n  function handleCloseClick() {\r\n    clearInputValue();\r\n    setFocus(false);\r\n  }\r\n\r\n  function handleEnterKey(e) {\r\n    if (e.key === \"Enter\") {\r\n      handleSearch(inputValue);\r\n      setFocus(false);\r\n    }\r\n  }\r\n\r\n  function handleSearchIcon() {\r\n    props.handleSearch(inputValue);\r\n    setFocus(false);\r\n  }\r\n\r\n  function handleOnFocus(e) {\r\n    e.target.select();\r\n    setFocus(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"search-card\">\r\n      <InputBase\r\n        id=\"input-with-icon-adornment\"\r\n        className=\"search-bar\"\r\n        placeholder=\"Search for US exchange-listed companies\"\r\n        autoComplete='off'\r\n        onChange={handleChange}\r\n        onKeyDown={handleEnterKey}\r\n        onFocus={handleOnFocus}\r\n        value={inputValue}\r\n        startAdornment={\r\n          <IconButton\r\n            position=\"start\"\r\n            className=\"search-button\"\r\n            size=\"small\"\r\n            aria-label=\"search\"\r\n            onClick={handleSearchIcon}\r\n          >\r\n            <Search />\r\n          </IconButton>\r\n        }\r\n        endAdornment={inputValue !== \"\" &&\r\n          <IconButton\r\n            position=\"end\"\r\n            size=\"small\"\r\n            aria-label=\"close\"\r\n            onClick={handleCloseClick}\r\n          >\r\n            <Close />\r\n          </IconButton>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar","import React from 'react';\r\nimport { Paper, List, ListItem, ListItemText } from '@material-ui/core';\r\nimport './AutoSuggestion.css';\r\n\r\nfunction AutoSuggestion(props) {\r\n  const suggestionList = props.suggestionList;\r\n  const handleSearch = props.handleSearch;\r\n  const setFocus = props.setFocus;\r\n\r\n  function handleClick(ticker) {\r\n    handleSearch(ticker);\r\n    setFocus(false);\r\n  }\r\n\r\n\r\n  // Render list items\r\n  let suggestionItems;\r\n  if (suggestionList !== undefined) {\r\n    const lastItem = suggestionList.length;\r\n\r\n    suggestionItems = suggestionList.map((el, index) => {\r\n      return (\r\n        <div key={el.ticker}>\r\n          <ListItem\r\n            button\r\n            divider={index !== lastItem - 1}\r\n            onClick={() => handleClick(el.ticker)}\r\n          >\r\n            <ListItemText\r\n              primary={el.name}\r\n              secondary={\"Ticker: \" + el.ticker}\r\n            />\r\n          </ListItem>\r\n        </div>\r\n      );\r\n    });\r\n  } else {\r\n    suggestionItems =\r\n      <ListItem button >\r\n        <ListItemText primary=\"No matches...\" />\r\n      </ListItem>\r\n  }\r\n\r\n  return (\r\n    <Paper elevation={5} className=\"result-box\">\r\n      <List>\r\n        {suggestionItems}\r\n      </List>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default AutoSuggestion","export class SearchProcessor {\r\n  constructor() {\r\n    this.tickerLookup = require('../data/ticker-dictionary.json');\r\n    this.suggestions = require('../data/autocomplete-suggestions.json');\r\n  }\r\n\r\n  getSuggestion(searchTerm) {\r\n    const formattedSearch = this.formatSearch(searchTerm);\r\n    const suggestionList = this.suggestions[formattedSearch];\r\n\r\n    if (suggestionList !== undefined) {\r\n      let results = []\r\n      suggestionList.forEach(el => {\r\n        let entry = {\r\n          name: this.tickerLookup[el],\r\n          ticker:el\r\n        };\r\n        results.push(entry);\r\n      });\r\n\r\n      return results;\r\n    }\r\n  }\r\n\r\n  getFirstSuggestion(searchTerm) {\r\n    const formattedSearch = this.formatSearch(searchTerm);\r\n    const firstSuggestionTicker = this.suggestions[formattedSearch]?.[0];\r\n\r\n    if (firstSuggestionTicker !== undefined) {\r\n      let entry = {\r\n        name:this.tickerLookup[firstSuggestionTicker],\r\n        ticker: firstSuggestionTicker\r\n      }\r\n\r\n      return entry;\r\n    }\r\n  }\r\n\r\n  formatSearch(unformattedName) {\r\n    // Upper case Company Name and remove any non-alphanumerics except for spaces between words\r\n    let name = String(unformattedName).toUpperCase();\r\n    return name.replace(/[^0-9a-z\\s]/gi, '').trim();\r\n  }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport SearchBar from './search/SearchBar';\r\nimport AutoSuggestion from './search/AutoSuggestion';\r\nimport { ClickAwayListener } from '@material-ui/core';\r\nimport { SearchProcessor } from '../services/SearchProcessor';\r\n\r\nfunction SearchForm(props) {\r\n  const updateSelectedCompany = props.updateSelectedCompany;\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n  function updateInputValue(input) {\r\n    setInputValue(input);\r\n  }\r\n\r\n  function clearInputValue() {\r\n    setInputValue('');\r\n  }\r\n\r\n  const [suggestionList, setSuggestionList] = useState(undefined);\r\n  useEffect(() => {\r\n    const searchProcessor = new SearchProcessor();\r\n    setSuggestionList(searchProcessor.getSuggestion(inputValue));\r\n  }, [inputValue]);\r\n\r\n  function handleSearch(input) {\r\n    const searchProcessor = new SearchProcessor();\r\n    const searchResult = searchProcessor.getFirstSuggestion(input);\r\n\r\n    if (searchResult !== undefined) {\r\n      setInputValue(searchResult.ticker);\r\n      updateSelectedCompany(searchResult.ticker, searchResult.name);\r\n    }\r\n  }\r\n\r\n  const [hasFocus, setHasFocus] = useState(false);\r\n  function setFocus(isFocused) {\r\n    setHasFocus(isFocused);\r\n  }\r\n  \r\n  function handleClickAway() {\r\n    setFocus(false);\r\n  }\r\n\r\n  return (\r\n    <ClickAwayListener onClickAway={handleClickAway}>\r\n      <div>\r\n        <SearchBar\r\n          inputValue={inputValue}\r\n          updateInputValue={updateInputValue}\r\n          clearInputValue={clearInputValue}\r\n          handleSearch={handleSearch}\r\n          setFocus={setFocus}\r\n        />\r\n        {hasFocus &&\r\n          <AutoSuggestion\r\n            suggestionList={suggestionList}\r\n            handleSearch={handleSearch}\r\n            setFocus={setFocus}\r\n          />\r\n        }\r\n      </div>\r\n    </ClickAwayListener>\r\n  );\r\n}\r\n\r\nexport default SearchForm","import axios from 'axios';\r\n\r\nexport class ApiClient {\r\n  url = (process.env.NODE_ENV === 'production') \r\n    ? 'https://hidden-fortress-30522.herokuapp.com/api' \r\n    : 'http://localhost:5000/api'\r\n\r\n  instance = axios.create({\r\n    baseURL: this.url\r\n  });\r\n\r\n  getTickerDict() {\r\n    return new Promise((resolve, reject) => {\r\n      resolve(this.instance\r\n        .get('/getTickerDict')\r\n        .then(res => res.data)\r\n      ).catch(err => {\r\n        reject(console.log(err));\r\n      });\r\n    });\r\n  }\r\n\r\n  getSuggestion(searchTerm) {\r\n    return new Promise((resolve, reject) => {\r\n      resolve(this.instance\r\n        .get('/getSuggestion', { params: { 'id': searchTerm } })\r\n        .then(res => res.data)\r\n      ).catch(err => {\r\n        reject(console.log(err));\r\n      });\r\n    });\r\n  }\r\n\r\n  getCompanyOverview(ticker) {\r\n    return new Promise((resolve, reject) => {\r\n      resolve(this.instance\r\n        .get('/getOverview', { params: { 'id': ticker } })\r\n        .then(res => res.data)\r\n      ).catch(err => {\r\n        reject(console.log(err));\r\n      });\r\n    });\r\n  }\r\n\r\n  getKeyStats(ticker) {\r\n    return new Promise((resolve, reject) => {\r\n      resolve(this.instance\r\n        .get('/getKeyStats', { params: { 'id': ticker } })\r\n        .then(res => res.data)\r\n      ).catch(err => {\r\n        reject(console.log(err));\r\n      });\r\n    });\r\n  }\r\n  \r\n  getQuote(ticker) {\r\n    return new Promise((resolve, reject) => {\r\n      resolve(this.instance\r\n        .get('/getQuote', { params: { 'id': ticker } })\r\n        .then(res => res.data)\r\n      ).catch(err => {\r\n        reject(console.log(err));\r\n      });\r\n    });\r\n  }\r\n\r\n  getPreviousDayQuote(ticker) {\r\n    return new Promise((resolve, reject) => {\r\n      resolve(this.instance\r\n        .get('/getPreviousDayQuote', { params: { 'id': ticker } })\r\n        .then(res => res.data)\r\n      ).catch(err => {\r\n        reject(console.log(err));\r\n      });\r\n    });\r\n  }\r\n\r\n  getIntradayQuotes(ticker) {\r\n    return new Promise((resolve, reject) => {\r\n      resolve(this.instance\r\n        .get('/getIntradayQuotes', { params: { 'id': ticker } })\r\n        .then(res => res.data)\r\n      ).catch(err => {\r\n        reject(console.log(err));\r\n      });\r\n    });\r\n  }\r\n\r\n  getFiveDayQuotes(ticker) {\r\n    return new Promise((resolve, reject) => {\r\n      resolve(this.instance\r\n        .get('/getFiveDayQuotes', { params: { 'id': ticker } })\r\n        .then(res => res.data)\r\n      ).catch(err => {\r\n        reject(console.log(err));\r\n      });\r\n    });\r\n  }\r\n\r\n  getAnnualQuotes(ticker) {\r\n    return new Promise((resolve, reject) => {\r\n      resolve(this.instance\r\n        .get('/getAnnualQuotes', { params: { 'id': ticker } })\r\n        .then(res => res.data)\r\n      ).catch(err => {\r\n        reject(console.log(err));\r\n      });\r\n    });\r\n  }\r\n\r\n  getFiveYearQuotes(ticker) {\r\n    return new Promise((resolve, reject) => {\r\n      resolve(this.instance\r\n        .get('/getFiveYearQuotes', { params: { 'id': ticker } })\r\n        .then(res => res.data)\r\n      ).catch(err => {\r\n        reject(console.log(err));\r\n      });\r\n    });\r\n  }\r\n}","import { Table, TableBody, TableCell, TableRow } from '@material-ui/core';\r\nimport React from 'react';\r\nimport './DataTable.css';\r\n\r\nfunction DataTable(props) {\r\n  const list = props.list;\r\n\r\n  let tableEntries = [];\r\n  if (list !== undefined) {\r\n    list.forEach((value, key) => {\r\n      tableEntries.push(\r\n        <TableRow key={key}>\r\n          <TableCell className=\"label\">{key}</TableCell>\r\n          <TableCell align=\"right\">{value}</TableCell>\r\n        </TableRow>\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Table>\r\n      <TableBody>\r\n        {tableEntries}\r\n      </TableBody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport default DataTable","import React, { useEffect, useState } from 'react';\r\nimport { Card, CardContent, CardHeader, Divider, Button, Typography } from '@material-ui/core';\r\nimport DataTable from './DataTable';\r\nimport './AboutCard.css';\r\n\r\nfunction AboutCard(props) {\r\n  const description = props.description;\r\n  const aboutList = props.aboutList;\r\n\r\n  const [isHidden, setIsHidden] = useState(true);\r\n  const [headerDescription, setHeaderDescription] = useState(null);\r\n  useEffect(() => {\r\n    let ellipsisStyle = {\r\n      display: (isHidden) ? 'inline' : 'none'\r\n    }\r\n  \r\n    let moreTextStyle = {\r\n      display: (isHidden) ? 'none' : 'inline'\r\n    }\r\n  \r\n    let buttonText = (isHidden) ? 'Show more' : 'Show less';\r\n\r\n    function handleButtonClick() {\r\n      setIsHidden(!isHidden);\r\n    }\r\n\r\n    const truncateLength = 350;\r\n\r\n    if (description.length > truncateLength) {\r\n      setHeaderDescription(\r\n        <>\r\n          <Typography variant=\"subtitle1\">\r\n            {description.slice(0, truncateLength)}\r\n            <span style={ellipsisStyle}>...</span>\r\n            <span style={moreTextStyle}>{description.slice(truncateLength)}</span>\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            disableElevation={true}\r\n            onClick={handleButtonClick}\r\n            className=\"button\"\r\n          >\r\n            <Typography variant=\"subtitle1\">\r\n              {buttonText}\r\n            </Typography>\r\n          </Button>\r\n        </>\r\n      );\r\n    } else {\r\n      setHeaderDescription(\r\n        <Typography variant=\"subtitle1\" paragraph={true}>\r\n          {(description !== '0' && description !== '') ? description : 'No description'}\r\n        </Typography>\r\n      );\r\n    }\r\n  }, [description, isHidden]);\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        title=\"About\"\r\n      />\r\n      <CardContent className=\"content\">\r\n        {headerDescription}\r\n        <Divider />\r\n        <DataTable list={aboutList} />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default AboutCard","import React from 'react';\r\nimport { Card, CardHeader, CardContent } from '@material-ui/core';\r\nimport DataTable from './DataTable';\r\nimport './KeyStatsCard.css';\r\n\r\nfunction KeyStatsCard(props) {\r\n  const keyStatList = props.keyStatList;\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        title=\"Key stats\"\r\n      />\r\n      <CardContent className=\"content\">\r\n        <DataTable list={keyStatList} />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default KeyStatsCard","import { enUS } from 'date-fns/locale';\r\nimport Chart from 'chart.js/auto';\r\n\r\nexport class ChartMaker {\r\n  constructor(chartContainer, chartData, dateRange, isChangePositive = true) {\r\n    this.chartContainer = chartContainer;\r\n    const gradient = this.getGradient(chartContainer.current, isChangePositive);\r\n\r\n    const dataOptions = this.chartConfig.data.datasets[0];\r\n    dataOptions.data = chartData;\r\n    dataOptions.backgroundColor = gradient;\r\n    dataOptions.borderColor = this.getBorderColor(isChangePositive);\r\n\r\n    this.setDateRangeOptions(this.chartConfig, dateRange);\r\n  }\r\n\r\n  getGradient(chartContainer, isChangePositive) {\r\n    const height = chartContainer.height;\r\n    const ctx = chartContainer.getContext('2d');\r\n    let gradient = ctx.createLinearGradient(0, 0, 0, height);\r\n\r\n    (isChangePositive)\r\n      ? gradient.addColorStop(0, 'rgb(221, 242, 229)')\r\n      : gradient.addColorStop(0, 'rgb(253, 191, 188)');\r\n\r\n    gradient.addColorStop(1, 'white');\r\n    return gradient;\r\n  }\r\n\r\n  getBorderColor(isChangePositive) {\r\n    return (isChangePositive) ? 'rgb(5, 168, 88)' : 'rgb(244,62,62)';\r\n  }\r\n\r\n  setDateRangeOptions(config, dateRange) {\r\n    let xScale = config.options.scales.x;\r\n\r\n    switch (dateRange) {\r\n      case '1D':\r\n        let date = new Date();\r\n        date.setHours(16);\r\n        date.setMinutes(0);\r\n        date.setSeconds(0);\r\n\r\n        xScale.time.unit = 'hour';\r\n        xScale.type = 'time';\r\n        xScale.max = date;\r\n        xScale.time.tooltipFormat = 'MMM dd, yyyy hh:mm a';\r\n        break;\r\n      case '5D':\r\n        xScale.time.unit = 'day';\r\n        xScale.type = 'timeseries';\r\n        delete xScale.max;\r\n        xScale.time.tooltipFormat = 'MMM dd, yyyy hh:mm a';\r\n        break;\r\n      case '1M':\r\n        xScale.time.unit = 'week';\r\n        xScale.type = 'time';\r\n        delete xScale.max;\r\n        xScale.time.tooltipFormat = 'MMM dd, yyyy';\r\n        break;\r\n      case '6M':\r\n        xScale.time.unit = 'month';\r\n        xScale.type = 'time';\r\n        delete xScale.max;\r\n        xScale.time.tooltipFormat = 'MMM dd, yyyy';\r\n        break;\r\n      case 'YTD':\r\n        xScale.time.unit = 'month';\r\n        xScale.type = 'time';\r\n        delete xScale.max;\r\n        xScale.time.tooltipFormat = 'MMM dd, yyyy';\r\n        break;\r\n      case '1Y':\r\n        xScale.time.unit = 'quarter';\r\n        xScale.type = 'time';\r\n        delete xScale.max;\r\n        xScale.time.tooltipFormat = 'MMM dd, yyyy';\r\n        break;\r\n      case '5Y':\r\n        xScale.time.unit = 'year';\r\n        xScale.type = 'time';\r\n        delete xScale.max;\r\n        xScale.time.tooltipFormat = 'MMM dd, yyyy';\r\n        break;\r\n      default:\r\n        console.log('Uncaught date range');\r\n    }\r\n  }\r\n\r\n  getChart() {\r\n    const config = this.chartConfig;\r\n    return new Chart(this.chartContainer.current, config);\r\n  }\r\n\r\n  chartConfig = {\r\n    type: 'line',\r\n    data: {\r\n      datasets: [{\r\n        label: 'Quote',\r\n        data: [],\r\n        backgroundColor: '',\r\n        borderColor: '',\r\n        fill: 'start',\r\n        pointRadius: 0,\r\n        spanGaps: true\r\n      }]\r\n    },\r\n    options: {\r\n      adapter: {\r\n        date: {\r\n          locale: enUS\r\n        }\r\n      },\r\n      plugins: {\r\n        legend: {\r\n          display: false\r\n        },\r\n        tooltip: {\r\n          intersect: false,\r\n          displayColors: false,\r\n        }\r\n      },\r\n      scales: {\r\n        x: {\r\n          type: 'time',\r\n          time: {\r\n            unit: '',\r\n            displayFormats: {\r\n              hour: 'hh:mm a',\r\n              day: 'MMM dd',\r\n              week: 'MMM dd',\r\n              month: 'MMM yyyy',\r\n              quarter: 'MMM yyyy',\r\n              year: 'yyyy'\r\n            },\r\n            tooltipFormat: '',\r\n          },\r\n          grid: {\r\n            display: false,\r\n          },\r\n        },\r\n        y: {\r\n          tick: { \r\n            callback: function(value) {\r\n              const formatter = new Intl.NumberFormat('en-US', {minimumFractionDigits: 2, maximumFractionDigits: 2})\r\n              return formatter(value) \r\n            }\r\n          }\r\n        }\r\n      },\r\n      responsive: true,\r\n      maintainAspectRatio: false\r\n    }\r\n  }\r\n}","import React, { useEffect, useState, useRef } from 'react';\r\nimport 'chartjs-adapter-date-fns';\r\nimport { ChartMaker } from '../../services/ChartMaker';\r\nimport './StockPriceChart.css';\r\n\r\nfunction StockPriceChart(props) {\r\n  const chartData = props.chartData;\r\n  const dateRange = props.dateRange;\r\n  const isChangePositive = props.isChangePositive;\r\n\r\n  const chartContainer = useRef(null);\r\n  const [chartInstance, setChartInstance] = useState(null);\r\n  useEffect(() => {\r\n    if (chartContainer !== null) {\r\n      setChartInstance(prevChart => {\r\n        if (prevChart !== null) {\r\n          prevChart.destroy();\r\n          const chartMaker = new ChartMaker(chartContainer, chartData, dateRange);\r\n          return chartMaker.getChart();\r\n        } else {\r\n          const chartMaker = new ChartMaker(chartContainer, chartData, dateRange);\r\n          return chartMaker.getChart();    \r\n        }\r\n      });\r\n    }\r\n  }, [chartContainer, chartData, dateRange]);\r\n\r\n  // Conditionally update chart color\r\n  useEffect(() => {\r\n    if (chartInstance !== null) {\r\n      const height = chartContainer.current.height;\r\n      const ctx = chartContainer.current.getContext('2d');\r\n      let gradient = ctx.createLinearGradient(0, 0, 0, height);\r\n\r\n      (isChangePositive)\r\n        ? gradient.addColorStop(0, 'rgb(221, 242, 229)')\r\n        : gradient.addColorStop(0, 'rgb(253, 191, 188)');\r\n      gradient.addColorStop(1, 'white');\r\n\r\n      const borderColor = (isChangePositive) ? 'rgb(5, 168, 88)' : 'rgb(244,62,62)';\r\n\r\n      chartInstance.data.datasets[0].backgroundColor = gradient;\r\n      chartInstance.data.datasets[0].borderColor = borderColor;\r\n      chartInstance.update();\r\n    }\r\n  }, [chartContainer, chartInstance, isChangePositive]);\r\n\r\n  return (\r\n    <div className=\"chart-container\">\r\n      <canvas\r\n        id=\"stock-chart\"\r\n        ref={chartContainer}\r\n        aria-label=\"stock price graph\"\r\n        role=\"img\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StockPriceChart","import React from 'react';\r\nimport { ToggleButtonGroup, ToggleButton } from '@material-ui/lab/index'\r\nimport { Typography } from '@material-ui/core';\r\nimport './DateToggleButton.css';\r\n\r\nfunction DateToggleButtons(props) {\r\n  let dateRange = props.dateRange;\r\n  let handleDateClick = props.handleDateClick;\r\n\r\n  return (\r\n    <ToggleButtonGroup\r\n      value={dateRange}\r\n      className=\"toggle-button-group\"\r\n      exclusive\r\n      onChange={handleDateClick}\r\n      size=\"small\"\r\n      aria-label=\"date range\"\r\n    >\r\n      <ToggleButton \r\n        value=\"1D\" \r\n        aria-label=\"1 day\"\r\n        className=\"toggle-button\"\r\n      >\r\n        <Typography variant=\"subtitle1\">1D</Typography>\r\n      </ToggleButton>\r\n      <ToggleButton \r\n        value=\"5D\" \r\n        aria-label=\"5 days\"\r\n        className=\"toggle-button\"\r\n      >\r\n        <Typography variant=\"subtitle1\">5D</Typography>\r\n      </ToggleButton>\r\n      <ToggleButton \r\n        value=\"1M\" \r\n        aria-label=\"1 month\"\r\n        className=\"toggle-button\"\r\n      >\r\n        <Typography variant=\"subtitle1\">1M</Typography>\r\n      </ToggleButton>\r\n      <ToggleButton \r\n        value=\"6M\" \r\n        aria-label=\"6 months\"\r\n        className=\"toggle-button\"\r\n      >\r\n        <Typography variant=\"subtitle1\">6M</Typography>\r\n      </ToggleButton>\r\n      <ToggleButton \r\n        value=\"YTD\" \r\n        aria-label=\"year to date\"\r\n        className=\"toggle-button\"\r\n      >\r\n        <Typography variant=\"subtitle1\">YTD</Typography>\r\n      </ToggleButton>\r\n      <ToggleButton \r\n        value=\"1Y\" \r\n        aria-label=\"1 year\"\r\n        className=\"toggle-button\"\r\n      >\r\n        <Typography variant=\"subtitle1\">1Y</Typography>\r\n      </ToggleButton>\r\n      <ToggleButton \r\n        value=\"5Y\" \r\n        aria-label=\"5 years\"\r\n        className=\"toggle-button\"\r\n      >\r\n        <Typography variant=\"subtitle1\">5Y</Typography>\r\n      </ToggleButton>\r\n    </ToggleButtonGroup>\r\n  );\r\n}\r\n\r\nexport default DateToggleButtons","import React, { useEffect, useState } from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport { ArrowUpward, ArrowDownward } from '@material-ui/icons';\r\nimport './PriceChangePercent.css';\r\n\r\nfunction PriceChangePercent(props) {\r\n  const isChangePositive = props.isChangePositive;\r\n  const percentChange = props.percentChange;\r\n\r\n  const [percentText, setPercentText] = useState('');\r\n  useEffect(() => {\r\n    const formatter = new Intl.NumberFormat('en-US', {\r\n      style: 'percent',\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n      signDisplay: 'never'\r\n    });\r\n\r\n    if (percentChange !== null) {\r\n      setPercentText(formatter.format(percentChange));\r\n    }\r\n  }, [percentChange])\r\n\r\n  let negativeStyle = {\r\n    backgroundColor: 'rgb(254,232,230)',\r\n    color: 'rgb(184,37,47)',\r\n  }\r\n\r\n  let positiveStyle = {\r\n    backgroundColor: 'rgb(229,244,234)',\r\n    color: 'rgb(58,147,98)',\r\n  }\r\n\r\n  return (\r\n    <div \r\n      className=\"percent-box\"\r\n      style={(isChangePositive)\r\n        ? positiveStyle\r\n        : negativeStyle\r\n      }\r\n      aria-label={ (isChangePositive)\r\n        ? `Up by ${percentText}`\r\n        : `Down by ${percentText}`\r\n      }\r\n    >\r\n      { (isChangePositive)\r\n        ? <ArrowUpward \r\n            className=\"direction-icon\"\r\n            aria-hidden=\"true\"\r\n          />\r\n        : <ArrowDownward \r\n            className=\"direction-icon\"\r\n            aria-hidden=\"true\"\r\n          />\r\n      }\r\n      <Typography className=\"percent-change\">\r\n        {percentText}\r\n      </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PriceChangePercent","import React, { useEffect, useState } from 'react'\r\nimport { Typography } from '@material-ui/core';\r\nimport './PriceChangeAmount.css';\r\n\r\nfunction PriceChangeAmount(props) {\r\n  const isChangePositive = props.isChangePositive;\r\n  const amountChange = props.amountChange;\r\n  const dateRange = props.dateRange;\r\n\r\n  const [amountText, setAmountText] = useState('');\r\n  useEffect(() => {\r\n    const formatter = new Intl.NumberFormat('en-US', {\r\n      style: 'decimal',\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n      signDisplay: 'always'\r\n    });\r\n\r\n    if (amountChange !== null){\r\n      const dateLabel = (dateRange !== '1D') ? dateRange : 'Today';\r\n      const changeString = formatter.format(amountChange) + ' ' + dateLabel;\r\n      setAmountText(changeString);\r\n    }\r\n  }, [amountChange, dateRange]);\r\n\r\n  let negativeStyle = {\r\n    color: 'rgb(184,37,47)',\r\n  }\r\n\r\n  let positiveStyle = {\r\n    color: 'rgb(58,147,98)',\r\n  }\r\n\r\n  return (\r\n    <Typography \r\n      className=\"amount-change\"\r\n      style={ (isChangePositive)\r\n        ? positiveStyle\r\n        : negativeStyle\r\n      }\r\n    >\r\n      {amountText}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default PriceChangeAmount","import React, { useEffect, useState } from 'react';\r\nimport { CardHeader, Chip, Typography } from '@material-ui/core';\r\nimport './ChartHeader.css';\r\nimport { ApiClient } from '../../services/Api';\r\n\r\nimport PriceChangePercent from './PriceChangePercent';\r\nimport PriceChangeAmount from './PriceChangeAmount';\r\n\r\nfunction ChartHeader(props) {\r\n  const selectedTicker = props.selectedTicker;\r\n  const selectedName = props.selectedName;\r\n  const dateRange = props.dateRange;\r\n  const chartData = props.chartData;\r\n  const isChangePositive = props.isChangePositive;\r\n  const handlePriceChange = props.handlePriceChange;\r\n\r\n  const [lastQuote, setLastQuote] = useState(null);\r\n  const [updateTime, setUpdateTime] = useState(null);\r\n  useEffect(() => {\r\n    const dateOptions = {\r\n      dateStyle: 'long',\r\n      timeStyle: 'long',\r\n      timeZone: 'America/New_York'\r\n    }\r\n    const dateFormatter = new Intl.DateTimeFormat('en-US', dateOptions)\r\n\r\n    async function getQuote() {\r\n      const apiClient = new ApiClient();\r\n      apiClient.getQuote(selectedTicker)\r\n        .then(res => {\r\n          setUpdateTime(dateFormatter.format(new Date(res.t * 1000)))\r\n          setLastQuote(res.c)\r\n        });\r\n    }\r\n    \r\n    if (selectedTicker !== '') {\r\n      setLastQuote(null)\r\n      getQuote();\r\n    }\r\n  }, [selectedTicker])\r\n\r\n  const [amountChange, setAmountChange] = useState(null);\r\n  useEffect(() => {\r\n    if (chartData !== undefined) {\r\n      const startPrice = chartData[0].y;\r\n      const change = lastQuote - startPrice;\r\n      handlePriceChange((change >= 0) ? true: false);\r\n      setAmountChange(change);\r\n    }\r\n  }, [chartData, lastQuote, handlePriceChange])\r\n\r\n  const [percentChange, setPercentChange] = useState(null);\r\n  useEffect(() => {\r\n    if (chartData !== undefined) {\r\n      const startPrice = chartData[0].y;\r\n      const percentChange = (lastQuote - startPrice) / startPrice;\r\n      setPercentChange(percentChange);\r\n    }\r\n  }, [chartData, lastQuote])\r\n\r\n  const currencyFormatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 2,\r\n    maximumFractionDigits: 2,\r\n  });\r\n\r\n  let header = (\r\n    <>\r\n      <Typography variant=\"h1\">\r\n        {selectedName}\r\n      </Typography>\r\n      { chartData &&\r\n        <>\r\n          <div className=\"stock-performance\">\r\n            <span>\r\n              <Typography className=\"last-quote\" >\r\n                {currencyFormatter.format(lastQuote)}\r\n              </Typography>\r\n            </span>\r\n            <PriceChangePercent\r\n              isChangePositive={isChangePositive}\r\n              percentChange={percentChange}\r\n            />\r\n            <PriceChangeAmount\r\n              isChangePositive={isChangePositive}\r\n              amountChange={amountChange}\r\n              dateRange={dateRange}\r\n            />\r\n          </div>\r\n          <Typography variant=\"subtitle1\" className=\"last-updated\">\r\n            {updateTime}\r\n          </Typography>\r\n        </>\r\n      }\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <CardHeader\r\n      title={header}\r\n      disableTypography={true}\r\n      action={\r\n        <Chip\r\n          color=\"primary\"  \r\n          label={selectedTicker}\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default ChartHeader","import { parse } from \"date-fns\";\r\n\r\nexport const chartDataFormatter = {\r\n  parse1D,\r\n  parse5D,\r\n  parse1M,\r\n  parse6M,\r\n  parseYTD,\r\n  parse1Y,\r\n  parse5Y\r\n}\r\n\r\n    /* JS Date function by default uses the system local time. Assume to be Eastern time.\r\n    *  TO DO: make adjustments to account for local time zones and daylight savings\r\n    */\r\n\r\nfunction parse1D(data) { \r\n  function parseDate(el) {\r\n    let dateString = `${el.date} ${el.minute}`;\r\n    return parse(dateString, 'yyyy-MM-dd HH:mm', new Date());\r\n  }\r\n  \r\n  const results = [];\r\n  data.forEach(el => {\r\n    // Skip null entries\r\n    if (el.close !== null) {\r\n      const entry = {\r\n        x: parseDate(el),\r\n        y: el.close,\r\n        volume: el.volume\r\n      }\r\n      \r\n      results.push(entry);\r\n    }\r\n  });\r\n  \r\n  // Sort result by date\r\n  results.sort((a,b) => a.x - b.x);\r\n\r\n  return results;\r\n}\r\n\r\nfunction parse5D(data) {\r\n  let refreshDate = data['Meta Data']['3. Last Refreshed'];\r\n  let endDate = parse(refreshDate, 'yyyy-MM-dd HH:mm:ss', new Date());\r\n  endDate.setMinutes(0);\r\n  endDate.setHours(16);\r\n\r\n  const dateOffset = 7 * 60 * 60 * 24 * 1000;\r\n\r\n  let startDate = new Date(endDate - dateOffset);\r\n  startDate.setMinutes(30);\r\n  startDate.setHours(9);\r\n\r\n  const results = [];\r\n  const timeSeriesData = data['Time Series (30min)'];\r\n\r\n  for (let key in timeSeriesData) {\r\n    const currentDate = parse(key, 'yyyy-MM-dd HH:mm:ss', new Date());\r\n\r\n    if (currentDate >= startDate && currentDate <= endDate) {\r\n      // Check if time is between 9:30am to 4pm ET\r\n      let startTime = new Date(currentDate);\r\n      startTime.setMinutes(30);\r\n      startTime.setHours(9);\r\n\r\n      let endTime = new Date(currentDate);\r\n      endTime.setMinutes(0);\r\n      endTime.setHours(16);\r\n\r\n      if (currentDate >= startTime && currentDate <= endTime) {\r\n        const entry = {\r\n          x: currentDate,\r\n          y: timeSeriesData[key]['4. close'],\r\n          volume: timeSeriesData[key]['5. volume']\r\n        }\r\n    \r\n        results.push(entry);\r\n      }\r\n    }\r\n  }\r\n  \r\n  // Sort result by date\r\n  results.sort((a,b) => a.x - b.x);\r\n\r\n  return results;\r\n}\r\n\r\nfunction parse1M(data) {\r\n  const endDate = new Date();\r\n  const startDate = new Date(endDate - 30 * 60 * 60 * 24 * 1000);\r\n\r\n  let results = parseDailyData(data, startDate, endDate)\r\n  \r\n  // Sort result by date\r\n  results.sort((a, b) => a.x - b.x);\r\n\r\n  return results;\r\n}\r\n\r\nfunction parse6M(data) {\r\n  const endDate = new Date();\r\n  const startDate = new Date(endDate - 6 * 30 * 60 * 60 * 24 * 1000);\r\n  \r\n  let results = parseDailyData(data, startDate, endDate)\r\n  \r\n  // Sort result by date\r\n  results.sort((a, b) => a.x - b.x);\r\n\r\n  return results;\r\n}\r\n\r\nfunction parseYTD(data) {\r\n  const endDate = new Date();\r\n  const startDate = new Date(endDate.getFullYear(),0,1);\r\n  \r\n  let results = parseDailyData(data, startDate, endDate)\r\n  \r\n  // Sort result by date\r\n  results.sort((a, b) => a.x - b.x);\r\n\r\n  return results;\r\n}\r\n\r\nfunction parse1Y(data) {\r\n  const endDate = new Date();\r\n  const startDate = new Date(endDate - 365 * 60 * 60 * 24 * 1000);\r\n\r\n  let results = parseDailyData(data, startDate, endDate)\r\n  \r\n  // Sort result by date\r\n  results.sort((a, b) => a.x - b.x);\r\n\r\n  return results;\r\n}\r\n\r\nfunction parse5Y(data) {\r\n  const refreshDate = data['Meta Data']['3. Last Refreshed'];\r\n  const endDate = parse(refreshDate, 'yyyy-MM-dd', new Date());\r\n  const dateOffset = 5 * 365 * 60 * 60 * 24 * 1000;\r\n\r\n  const startDate = new Date(endDate - dateOffset);\r\n  \r\n  const results = [];\r\n  const timeSeriesData = data['Weekly Time Series'];\r\n\r\n  for (let key in timeSeriesData) {\r\n    const currentDate = parse(key, 'yyyy-MM-dd', new Date());\r\n\r\n    if (currentDate >= startDate && currentDate <= endDate) {\r\n      const entry = {\r\n        x: currentDate,\r\n        y: timeSeriesData[key]['4. close'],\r\n        volume: timeSeriesData[key]['5. volume']\r\n      }\r\n\r\n      results.push(entry);\r\n    }\r\n  }\r\n\r\n  // Sort result by date\r\n  results.sort((a, b) => a.x - b.x);\r\n  return results;\r\n}\r\n\r\nfunction parseDailyData(data, startDate, endDate) {\r\n  const results = [];\r\n  \r\n  data.forEach(el => {\r\n    const currentDate = new Date(el.t);\r\n\r\n    if (currentDate >= startDate && currentDate <= endDate) {\r\n      const entry = {\r\n        x: currentDate,\r\n        y: el.c,\r\n        volume: el.v\r\n      }\r\n  \r\n      results.push(entry);\r\n    }\r\n  });\r\n\r\n  return results;\r\n}","import { useState, useEffect } from 'react';\r\nimport { ApiClient } from '../../services/Api';\r\nimport { chartDataFormatter } from '../../services/ChartDataFormatter';\r\n\r\nexport function useChartData(dateRange, ticker) {\r\n  const [chartData1D, setChartData1D] = useState(undefined);\r\n  const [chartData5D, setChartData5D] = useState(undefined);\r\n  const [chartData1M, setChartData1M] = useState(undefined);\r\n  const [chartData6M, setChartData6M] = useState(undefined);\r\n  const [chartDataYTD, setChartDataYTD] = useState(undefined);\r\n  const [chartData1Y, setChartData1Y] = useState(undefined);\r\n  const [chartData5Y, setChartData5Y] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    if (ticker !== '') {\r\n      const apiClient = new ApiClient();\r\n      // Clear current data\r\n      setChartData1D(undefined);\r\n      setChartData5D(undefined);\r\n      setChartData1M(undefined);\r\n      setChartData6M(undefined);\r\n      setChartDataYTD(undefined);\r\n      setChartData1Y(undefined);\r\n      setChartData5Y(undefined);\r\n\r\n      // API calls\r\n      apiClient.getIntradayQuotes(ticker)\r\n        .then(res => {\r\n          if (isMounted) {\r\n            setChartData1D(chartDataFormatter.parse1D(res));\r\n          }\r\n        })\r\n        .catch(err => console.log('Intraday quote fetch failed: ' + err));\r\n\r\n      apiClient.getFiveDayQuotes(ticker)\r\n        .then(res => (isMounted)\r\n          ? setChartData5D(chartDataFormatter.parse5D(res))\r\n          : undefined\r\n        )\r\n        .catch(err => console.log('Five day quote fetch failed: ' + err));\r\n\r\n      apiClient.getAnnualQuotes(ticker)\r\n        .then(res => (isMounted)\r\n          ? setChartData5D(setAnnualData(res))\r\n          : undefined\r\n        )\r\n        .catch(err => console.log('Annual data fetch failed: ' + err));\r\n\r\n      apiClient.getFiveYearQuotes(ticker)\r\n        .then(res => (isMounted)\r\n          ? setChartData5Y(chartDataFormatter.parse5Y(res))\r\n          : undefined\r\n        )\r\n        .catch(err => console.log('Five year quote fetch failed: ' + err));\r\n\r\n      function setAnnualData(apiData) {\r\n        const timeSeriesData = apiData.results;\r\n\r\n        setChartData1M(chartDataFormatter.parse1M(timeSeriesData))\r\n        setChartData6M(chartDataFormatter.parse6M(timeSeriesData))\r\n        setChartDataYTD(chartDataFormatter.parseYTD(timeSeriesData))\r\n        setChartData1Y(chartDataFormatter.parse1Y(timeSeriesData))\r\n      }\r\n    }\r\n\r\n    // Do not fetch suggestion list if component is unmounted\r\n    return function cleanup() {\r\n      isMounted = false;\r\n    }\r\n  }, [ticker]);\r\n\r\n  switch (dateRange) {\r\n    case '1D':\r\n      return chartData1D;\r\n    case '5D':\r\n      return chartData5D;\r\n    case '1M':\r\n      return chartData1M;\r\n    case '6M':\r\n      return chartData6M;\r\n    case 'YTD':\r\n      return chartDataYTD;\r\n    case '1Y':\r\n      return chartData1Y;\r\n    case '5Y':\r\n      return chartData5Y;\r\n    default:\r\n      return console.log('Uncaught date range');\r\n  }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Card, CardContent } from '@material-ui/core';\r\nimport StockPriceChart from './StockPriceChart';\r\nimport DateToggleButtons from './DateToggleButtons';\r\nimport ChartHeader from './ChartHeader';\r\nimport { useChartData } from './ChartHooks';\r\nimport './ChartCard.css';\r\n\r\nfunction ChartCard(props) {\r\n  const selectedTicker = props.selectedTicker;\r\n  const selectedName = props.selectedName;\r\n\r\n  const [dateRange, setDateRange] = useState('1D');\r\n  const handleDateClick = (e, newDate) => {\r\n    if (newDate !== null) {\r\n      setDateRange(newDate);\r\n    }\r\n  }\r\n\r\n  // Fetch data on ticker change\r\n  const chartData = useChartData(dateRange, selectedTicker);\r\n  useEffect(() => {\r\n    // Reset to 1 day view on new ticker selected\r\n    setDateRange('1D');\r\n  }, [selectedTicker]);\r\n\r\n  const [isChangePositive, setIsChangePositive] = useState(null);\r\n  function handlePriceChange(isPositive) {\r\n    setIsChangePositive(isPositive);\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <ChartHeader\r\n        selectedTicker={selectedTicker}\r\n        selectedName={selectedName}\r\n        dateRange={dateRange}\r\n        chartData={chartData}\r\n        isChangePositive={isChangePositive}\r\n        handlePriceChange={handlePriceChange}\r\n      />\r\n      <CardContent className=\"content\">\r\n        <DateToggleButtons\r\n          dateRange={dateRange}\r\n          handleDateClick={handleDateClick}\r\n        />\r\n        <div>\r\n          {chartData && dateRange &&\r\n            <StockPriceChart\r\n              dateRange={dateRange}\r\n              chartData={chartData}\r\n              isChangePositive={isChangePositive}\r\n            />\r\n          }\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ChartCard","import React, { useState, useEffect } from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport { ApiClient } from '../services/Api';\r\nimport AboutCard from './other/AboutCard';\r\nimport KeyStatsCard from './other/KeyStatsCard';\r\nimport ChartCard from './chart/ChartCard';\r\nimport './StockOverview.css';\r\n\r\nfunction StockOverview(props) {\r\n  const selectedTicker = props.selectedTicker;\r\n  const selectedName = props.selectedName;\r\n\r\n  const [aboutList, setAboutList] = useState(undefined);\r\n  const [keyStatList, setKeyStatList] = useState(undefined);\r\n  const [description, setDescription] = useState('');\r\n\r\n  // Update the About Card\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    if (selectedTicker !== '') {\r\n      const apiClient = new ApiClient();\r\n\r\n      apiClient.getCompanyOverview(selectedTicker)\r\n        .then(res => (isMounted) ? updateAboutCard(res) : undefined)\r\n        .catch(err => console.log('Error retrieving About data: ' + err));\r\n    }\r\n    \r\n    function updateAboutCard(apiData) {\r\n      const wholeNumber = new Intl.NumberFormat('en-US');\r\n\r\n      setDescription(apiData.description);\r\n\r\n      setAboutList(new Map([\r\n        ['sector', apiData.sector],\r\n        ['industry', apiData.industry],\r\n        ['headquarters', formatAddress(apiData)],\r\n        ['employees', formatNumber(apiData.employees, wholeNumber)]\r\n      ]));\r\n    }\r\n\r\n    return function cleanup() {\r\n      isMounted = false;\r\n    }\r\n  }, [selectedTicker]);\r\n\r\n  // Update Key Stats Card\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    if (selectedTicker !== '') {\r\n      fetchData();\r\n    }\r\n    \r\n    async function fetchData() {\r\n      const currency = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD',\r\n        minimumFractionDigits: 2,\r\n        maximumFractionDigits: 2,\r\n      });\r\n      const decimal = new Intl.NumberFormat('en-US', {\r\n        style: 'decimal',\r\n        minimumFractionDigits: 2,\r\n        maximumFractionDigits: 2,\r\n      });\r\n      const percentage = new Intl.NumberFormat('en-US', {\r\n        style: 'percent',\r\n        minimumFractionDigits: 2,\r\n        maximumFractionDigits: 2,\r\n      });\r\n\r\n      const apiClient = new ApiClient();\r\n\r\n      let keyStatMap = new Map([\r\n        ['previous close', null],\r\n        ['day range', null],\r\n        ['year range', null],\r\n        ['market cap', null],\r\n        ['volume', null],\r\n        ['p/e ratio', null],\r\n        ['dividend yield', null],\r\n        ['eps', null]\r\n      ]);\r\n    \r\n      // Fetch key stats data from api\r\n      const keyStatsProm = await apiClient.getKeyStats(selectedTicker)\r\n        .then(res => updateKeyStats(res))\r\n        .catch(err => console.log('Error retrieving Key Stats: ' + err));\r\n\r\n      // Fetch previous quote data from api\r\n      const quoteProm = await apiClient.getPreviousDayQuote(selectedTicker)\r\n        .then(res => updateQuote(res))\r\n        .catch(err => console.log('Error retrieving previous day quote: ' + err));\r\n\r\n      function updateKeyStats(apiData) {\r\n        keyStatMap.set('year range', formatNumber(apiData.week52low, currency) + \" - \" +\r\n          formatNumber(apiData.week52high, currency));\r\n        keyStatMap.set('market cap', abbreviateNumber(apiData.marketcap) + ' USD');\r\n        keyStatMap.set('p/e ratio', formatNumber(apiData.peRatio, decimal));\r\n        keyStatMap.set('dividend yield', formatNumber(apiData.dividendYield, percentage));\r\n        keyStatMap.set('eps', formatNumber(apiData.ttmEPS, decimal));      \r\n      }\r\n\r\n      function updateQuote(apiData) {\r\n        keyStatMap.set('previous close', formatNumber(apiData.close, decimal));\r\n        keyStatMap.set('day range', formatNumber(apiData.low, currency) + \" - \" +\r\n          formatNumber(apiData.high, currency));\r\n        keyStatMap.set('volume', abbreviateNumber(apiData.volume));\r\n      }\r\n\r\n      Promise.all([keyStatsProm, quoteProm])\r\n        .then((isMounted) ? setKeyStatList(keyStatMap) : undefined);\r\n    }\r\n\r\n    return function cleanup() {\r\n      isMounted = false;\r\n    }\r\n  }, [selectedTicker]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"chart-card\">\r\n        <ChartCard\r\n          selectedTicker={selectedTicker}\r\n          selectedName={selectedName}\r\n        />\r\n      </div>\r\n      <div className=\"key-stat-card\">\r\n        {keyStatList &&\r\n          <KeyStatsCard\r\n            keyStatList={keyStatList}\r\n          />\r\n        }\r\n      </div>\r\n      <div className=\"about-card\">\r\n        {aboutList &&\r\n          <AboutCard\r\n            description={description}\r\n            aboutList={aboutList}\r\n          />\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction formatAddress(data) {\r\n  return (\r\n    <>\r\n      <Typography variant=\"body2\">\r\n        {data.address}\r\n      </Typography>\r\n      { data.address2 &&\r\n        <Typography variant=\"body2\">\r\n          {data.address2}\r\n        </Typography>\r\n      }\r\n      <Typography variant=\"body2\">\r\n        {data.city + ', ' + data.state}\r\n      </Typography>\r\n      <Typography variant=\"body2\">\r\n        {data.country}\r\n      </Typography>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction formatNumber(value, formatter) {\r\n  if (!isNaN(value)) {\r\n    return formatter.format(value);\r\n  } else {\r\n    return 'N/A';\r\n  }\r\n}\r\n\r\nfunction abbreviateNumber(amount) {\r\n  if (amount < 1000) {\r\n    return amount;\r\n  }\r\n\r\n  const digits = Math.floor(Math.log10(amount) + 1);\r\n\r\n  // Adjustment down if exactly divisible by 3, e.g. 100,000 = 100K not 0.1M\r\n  const thousands = Math.floor(digits / 3) - (digits % 3 === 0);\r\n  const symbol = \"KMBT\".charAt(thousands - 1);\r\n  const roundedNum = (amount / Math.pow(10, thousands * 3)).toFixed(2);\r\n\r\n  return roundedNum + symbol;\r\n}\r\n\r\nexport default StockOverview","import React from 'react';\r\nimport { Container, Divider, IconButton, Typography } from '@material-ui/core';\r\nimport './Footer.css';\r\nimport { Email, GitHub, LinkedIn } from '@material-ui/icons';\r\n\r\nfunction Footer(props) {\r\n  const linkedInUrl = 'https://www.linkedin.com/in/kevinliou'\r\n  const gitHubUrl = 'https://github.com/kevliou/stock-screener'\r\n\r\n  function handleOpenUrlInNewTab(url) {\r\n    const newWindow = window.open(url, '_blank', 'noopener,noreferrer')\r\n    if (newWindow) newWindow.opener = null\r\n  }\r\n\r\n  function handleSendEmail() {\r\n    window.location.href = 'mailto:kliou879@gmail.com?subject=Greetings!';\r\n  }\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <Container maxWidth=\"md\">\r\n        <Divider className=\"divider\" />\r\n        <div className=\"footer-signature\">\r\n          <Typography\r\n            display=\"block\"\r\n            color=\"secondary\"\r\n            className=\"name\"\r\n          >\r\n            {\"\\u00A9 \" + new Date().getFullYear() + \" Kevin Liou\"}\r\n          </Typography>\r\n          <div>\r\n            <IconButton\r\n              size=\"medium\"\r\n              aria-label=\"Github\"\r\n              color=\"secondary\"\r\n              onClick={() => handleOpenUrlInNewTab(gitHubUrl)}\r\n            >\r\n              <GitHub />\r\n            </IconButton>\r\n            <IconButton\r\n              size=\"medium\"\r\n              aria-label=\"LinkedIn\"\r\n              color=\"secondary\"\r\n              onClick={() => handleOpenUrlInNewTab(linkedInUrl)}\r\n            >\r\n              <LinkedIn />\r\n            </IconButton>\r\n            <IconButton\r\n              size=\"medium\"\r\n              aria-label=\"email\"\r\n              color=\"secondary\"\r\n              onClick={handleSendEmail}\r\n            >\r\n              <Email />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer","import React, { useState } from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport SearchForm from './SearchForm';\r\nimport StockOverview from './StockOverview';\r\nimport Footer from './Footer';\r\nimport './LandingPage.css';\r\nimport LoadingBar from './loading/LoadingBar';\r\n\r\nfunction LandingPage(props) {\r\n  const [selectedTicker, setSelectedTicker] = useState('');\r\n  const [selectedName, setSelectedName] = useState('');\r\n\r\n  function updateSelectedCompany(symbol, companyName) {\r\n    console.log('Selected Ticker: ' + symbol);\r\n    setSelectedTicker(symbol);\r\n    setSelectedName(companyName);\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Container maxWidth=\"md\">\r\n        <div className=\"search\">\r\n          <section>\r\n            <SearchForm\r\n              selectedTicker={selectedTicker}\r\n              updateSelectedCompany={updateSelectedCompany}\r\n            />\r\n          </section>\r\n        </div>\r\n        {/* <LoadingBar /> */}\r\n        <div className=\"stock-card\">\r\n          <section>\r\n            {selectedTicker &&\r\n              <StockOverview\r\n                selectedTicker={selectedTicker}\r\n                selectedName={selectedName}\r\n              />\r\n            }\r\n          </section>\r\n        </div>\r\n      </Container>\r\n      <Footer className=\"footer\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingPage","import React from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport LandingPage from './components/LandingPage';\n\nfunction App() {\n  let theme = createMuiTheme({\n    palette: {\n      secondary: {\n        main:'#FFFFFF'\n      }\n    },\n    typography: {\n      h1: {\n        fontSize:'1.5rem'\n      },\n      body1:{\n        fontSize:'0.875rem'\n      },\n      body2:{\n        fontSize:'0.875rem'\n      },\n      subtitle1:{\n        fontSize: '0.75rem'\n      }\n    },\n    overrides: {\n      MuiTableRow: {\n        root: {\n          \"&:last-child td\": {\n            borderBottom: 0\n          }\n        }\n      }\n    }\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <LandingPage />\n    </ThemeProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}