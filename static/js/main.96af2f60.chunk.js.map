{"version":3,"sources":["components/search/SearchBar.js","components/search/AutoSuggestion.js","services/SearchProcessor.js","components/SearchForm.js","components/transition/TransitionManager.js","components/other/DataTable.js","components/ApiHook.js","components/other/AboutCard.js","components/other/KeyStatsCard.js","services/ChartMaker.js","components/chart/StockPriceChart.js","components/chart/DateToggleButtons.js","components/chart/PriceChangePercent.js","components/chart/PriceChangeAmount.js","components/chart/ChartHeader.js","services/ChartDataFormatter.js","components/chart/ChartCard.js","components/chart/ChartHooks.js","components/StockOverview.js","components/Footer.js","components/LandingPage.js","App.js","index.js"],"names":["SearchBar","props","inputValue","updateInputValue","clearInputValue","handleSearch","setFocus","className","InputBase","id","placeholder","autoComplete","onChange","e","target","value","onKeyDown","key","onFocus","select","startAdornment","IconButton","position","size","aria-label","onClick","Search","endAdornment","Close","AutoSuggestion","suggestionItems","suggestionList","undefined","lastItem","length","map","el","index","ListItem","button","divider","ticker","ListItemText","primary","name","secondary","Paper","elevation","List","SearchProcessor","this","tickerLookup","require","suggestions","searchTerm","formattedSearch","formatSearch","results","forEach","entry","push","unformattedName","String","toUpperCase","replace","trim","SearchForm","updateSelectedCompany","useState","setInputValue","setSuggestionList","input","tickerIndex","useEffect","searchProcessor","getSuggestion","hasFocus","setHasFocus","isFocused","ClickAwayListener","onClickAway","TransitionManager","content","isLoading","loadingMessage","error","display","console","log","Alert","severity","AlertTitle","Typography","CircularProgress","DataTable","list","tableEntries","TableRow","TableCell","align","Table","TableBody","useApi","url","data","setData","loading","setLoading","setError","config","baseURL","method","isMounted","params","axios","then","res","catch","err","AboutCard","selectedTicker","formatNumber","aboutData","aboutLoading","aboutError","aboutList","setAboutList","description","setDescription","wholeNumber","Intl","NumberFormat","Map","sector","industry","variant","address","address2","city","state","country","employees","isHidden","setIsHidden","headerDescription","setHeaderDescription","ellipsisStyle","moreTextStyle","buttonText","slice","style","Button","disableElevation","paragraph","Card","CardHeader","title","CardContent","Divider","abbreviateNumber","amount","digits","Math","floor","log10","thousands","symbol","charAt","pow","toFixed","KeyStatsCard","keyStatData","keyStatLoading","keyStatError","previousDayQuoteData","previousDayQuoteLoading","previousDayQuoteError","keyStatList","setKeyStatList","currency","minimumFractionDigits","maximumFractionDigits","decimal","percentage","keyStatMap","apiData","set","week52low","week52high","marketcap","peRatio","dividendYield","ttmEPS","close","low","high","volume","updateQuote","ChartMaker","chartContainer","chartData","dateRange","isChangePositive","chartConfig","type","datasets","label","backgroundColor","borderColor","fill","pointRadius","spanGaps","options","adapter","date","locale","enUS","plugins","legend","tooltip","intersect","displayColors","scales","x","time","unit","displayFormats","hour","day","week","month","quarter","year","tooltipFormat","grid","y","tick","callback","formatter","responsive","maintainAspectRatio","gradient","getGradient","current","dataOptions","getBorderColor","setDateRangeOptions","height","getContext","createLinearGradient","addColorStop","xScale","Date","setHours","setMinutes","setSeconds","max","Chart","StockPriceChart","useRef","chartInstance","setChartInstance","prevChart","destroy","getChart","update","ref","role","DateToggleButtons","handleDateClick","exclusive","PriceChangePercent","percentChange","percentText","setPercentText","signDisplay","format","color","ArrowUpward","aria-hidden","ArrowDownward","PriceChangeAmount","amountChange","amountText","setAmountText","dateLabel","changeString","ChartHeader","selectedName","handlePriceChange","quoteApiData","lastQuote","setLastQuote","updateTime","setUpdateTime","dateFormatter","DateTimeFormat","dateStyle","timeStyle","timeZone","t","c","setAmountChange","startPrice","change","setPercentChange","currencyFormatter","header","disableTypography","action","Chip","chartDataFormatter","parse1D","parseDate","dateString","minute","parse","sort","a","b","parse5D","refreshDate","endDate","startDate","timeSeriesData","currentDate","startTime","endTime","parse1M","parseDailyData","parse6M","parseYTD","getFullYear","parse1Y","parse5Y","v","ChartCard","setDateRange","apiData1D","loading1D","error1D","apiData5D","loading5D","error5D","apiData1Y","loading1Y","error1Y","apiData5Y","loading5Y","error5Y","chartData1D","setChartData1D","chartData5D","setChartData5D","chartData1M","setChartData1M","chartData6M","setChartData6M","chartDataYTD","setChartDataYTD","chartData1Y","setChartData1Y","chartData5Y","setChartData5Y","useChartData","chartLoading","chartError","setIsChangePositive","isPositive","newDateRange","StockOverview","isNaN","Footer","handleOpenUrlInNewTab","newWindow","window","open","opener","Container","maxWidth","GitHub","LinkedIn","location","href","Email","LandingPage","setSelectedTicker","setSelectedName","herokuLoading","herokuError","stockOverviewContent","companyName","App","theme","createMuiTheme","palette","main","typography","h1","fontSize","body1","body2","subtitle1","overrides","MuiTableRow","root","borderBottom","ThemeProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96af2f60.chunk.js","sourcesContent":["import React from 'react';\r\nimport { IconButton, InputBase } from '@material-ui/core';\r\nimport { Search, Close } from '@material-ui/icons';\r\nimport './SearchBar.css';\r\n\r\nfunction SearchBar(props) {\r\n  const inputValue = props.inputValue;\r\n  const updateInputValue = props.updateInputValue;\r\n  const clearInputValue = props.clearInputValue;\r\n  const handleSearch = props.handleSearch;\r\n  const setFocus = props.setFocus;\r\n\r\n  function handleChange(e) {\r\n    updateInputValue(e.target.value);\r\n  }\r\n\r\n  function handleCloseClick() {\r\n    clearInputValue();\r\n    setFocus(false);\r\n  }\r\n\r\n  function handleEnterKey(e) {\r\n    if (e.key === \"Enter\") {\r\n      handleSearch();\r\n      setFocus(false);\r\n    }\r\n  }\r\n\r\n  function handleSearchIcon() {\r\n    handleSearch();\r\n    setFocus(false);\r\n  }\r\n\r\n  function handleOnFocus(e) {\r\n    e.target.select();\r\n    setFocus(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"search-card\">\r\n      <InputBase\r\n        id=\"input-with-icon-adornment\"\r\n        className=\"search-bar\"\r\n        placeholder=\"Search for US exchange-listed companies\"\r\n        autoComplete='off'\r\n        onChange={handleChange}\r\n        onKeyDown={handleEnterKey}\r\n        onFocus={handleOnFocus}\r\n        value={inputValue}\r\n        startAdornment={\r\n          <IconButton\r\n            position=\"start\"\r\n            className=\"search-button\"\r\n            size=\"small\"\r\n            aria-label=\"search\"\r\n            onClick={handleSearchIcon}\r\n          >\r\n            <Search />\r\n          </IconButton>\r\n        }\r\n        endAdornment={inputValue !== \"\" &&\r\n          <IconButton\r\n            position=\"end\"\r\n            size=\"small\"\r\n            aria-label=\"close\"\r\n            onClick={handleCloseClick}\r\n          >\r\n            <Close />\r\n          </IconButton>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar","import React from 'react';\r\nimport { Paper, List, ListItem, ListItemText } from '@material-ui/core';\r\nimport './AutoSuggestion.css';\r\n\r\nfunction AutoSuggestion(props) {\r\n  const suggestionList = props.suggestionList;\r\n  const handleSearch = props.handleSearch;\r\n  const setFocus = props.setFocus;\r\n\r\n  function handleClick(ticker) {\r\n    handleSearch(ticker);\r\n    setFocus(false);\r\n  }\r\n\r\n\r\n  // Render list items\r\n  let suggestionItems;\r\n  if (suggestionList !== undefined) {\r\n    const lastItem = suggestionList.length;\r\n\r\n    suggestionItems = suggestionList.map((el, index) => {\r\n      return (\r\n        <div key={el.ticker}>\r\n          <ListItem\r\n            button\r\n            divider={index !== lastItem - 1}\r\n            onClick={() => handleClick(el.ticker)}\r\n          >\r\n            <ListItemText\r\n              primary={el.name}\r\n              secondary={\"Ticker: \" + el.ticker}\r\n            />\r\n          </ListItem>\r\n        </div>\r\n      );\r\n    });\r\n  } else {\r\n    suggestionItems =\r\n      <ListItem button >\r\n        <ListItemText primary=\"No matches...\" />\r\n      </ListItem>\r\n  }\r\n\r\n  return (\r\n    <Paper elevation={5} className=\"result-box\">\r\n      <List>\r\n        {suggestionItems}\r\n      </List>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default AutoSuggestion","export class SearchProcessor {\r\n  constructor() {\r\n    this.tickerLookup = require('../data/ticker-dictionary.json');\r\n    this.suggestions = require('../data/autocomplete-suggestions.json');\r\n  }\r\n\r\n  getSuggestion(searchTerm) {\r\n    const formattedSearch = this.formatSearch(searchTerm);\r\n    const suggestionList = this.suggestions[formattedSearch];\r\n\r\n    if (suggestionList !== undefined) {\r\n      let results = []\r\n      suggestionList.forEach(el => {\r\n        let entry = {\r\n          name: this.tickerLookup[el],\r\n          ticker:el\r\n        };\r\n        results.push(entry);\r\n      });\r\n\r\n      return results;\r\n    }\r\n  }\r\n\r\n  formatSearch(unformattedName) {\r\n    // Upper case Company Name and remove any non-alphanumerics except for spaces between words\r\n    let name = String(unformattedName).toUpperCase();\r\n    return name.replace(/[^0-9a-z\\s]/gi, '').trim();\r\n  }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport SearchBar from './search/SearchBar';\r\nimport AutoSuggestion from './search/AutoSuggestion';\r\nimport { ClickAwayListener } from '@material-ui/core';\r\nimport { SearchProcessor } from '../services/SearchProcessor';\r\n\r\nfunction SearchForm(props) {\r\n  const updateSelectedCompany = props.updateSelectedCompany;\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n  function updateInputValue(input) {\r\n    setInputValue(input);\r\n  }\r\n\r\n  function clearInputValue() {\r\n    setInputValue('');\r\n  }\r\n\r\n  const [suggestionList, setSuggestionList] = useState(undefined);\r\n  useEffect(() => {\r\n    if (inputValue !== '') {\r\n      const searchProcessor = new SearchProcessor();\r\n      setSuggestionList(searchProcessor.getSuggestion(inputValue));\r\n    } else {\r\n      const defaultList = [\r\n        {ticker: 'AAPL', name: 'Apple Inc.'},\r\n        {ticker: 'MSFT', name: 'Microsoft Corporation'},\r\n        {ticker: 'AMZN', name: 'Amazon.com Inc.'},\r\n        {ticker: 'GOOGL', name: 'Alphabet Inc. Class A'},\r\n        {ticker: 'FB', name: 'Facebook Inc. Class A'}\r\n      ]\r\n      setSuggestionList(defaultList);\r\n    }\r\n  }, [inputValue]);\r\n\r\n  function handleSearch(input) {\r\n    if (suggestionList !== undefined) {\r\n      let tickerIndex = 0\r\n\r\n      if (input !== undefined) {\r\n        suggestionList.forEach((el, index) => {\r\n          if(el.ticker === input) {\r\n            tickerIndex = index;\r\n          }\r\n        });\r\n      }\r\n\r\n      setInputValue(suggestionList[tickerIndex].ticker);\r\n      updateSelectedCompany(suggestionList[tickerIndex].ticker, suggestionList[tickerIndex].name);\r\n    }\r\n  }\r\n\r\n  const [hasFocus, setHasFocus] = useState(false);\r\n  function setFocus(isFocused) {\r\n    setHasFocus(isFocused);\r\n  }\r\n  \r\n  function handleClickAway() {\r\n    setFocus(false);\r\n  }\r\n\r\n  return (\r\n    <ClickAwayListener onClickAway={handleClickAway}>\r\n      <div>\r\n        <SearchBar\r\n          inputValue={inputValue}\r\n          updateInputValue={updateInputValue}\r\n          clearInputValue={clearInputValue}\r\n          handleSearch={handleSearch}\r\n          setFocus={setFocus}\r\n        />\r\n        {hasFocus &&\r\n          <AutoSuggestion\r\n            suggestionList={suggestionList}\r\n            handleSearch={handleSearch}\r\n            setFocus={setFocus}\r\n          />\r\n        }\r\n      </div>\r\n    </ClickAwayListener>\r\n  );\r\n}\r\n\r\nexport default SearchForm","import { CircularProgress, Typography } from '@material-ui/core';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport React from 'react';\r\nimport './TransitionManager.css';\r\n\r\nfunction TransitionManager(props) {\r\n  const content = props.content;\r\n  const isLoading = props.isLoading;\r\n  const loadingMessage = props.loadingMessage;\r\n  const error = props.error;\r\n\r\n  let display = false;\r\n  if (error) {\r\n    console.log(error);\r\n    display = (\r\n      <Alert severity=\"error\">\r\n        <AlertTitle>Error</AlertTitle>\r\n        {(process.env.NODE_ENV === 'production')\r\n          ? 'Something went wrong'\r\n          : error.message\r\n        }\r\n      </Alert>\r\n    )\r\n  } else if (isLoading) {\r\n    display = (\r\n      <div className=\"loading\">\r\n        { loadingMessage &&\r\n          <Typography>{loadingMessage}</Typography>\r\n        }\r\n        <CircularProgress className=\"progress-circle\" />\r\n      </div>\r\n    )\r\n  } else if (content !== undefined) {\r\n    display = content;\r\n  }\r\n\r\n  return display;\r\n}\r\n\r\nexport default TransitionManager","import { Table, TableBody, TableCell, TableRow } from '@material-ui/core';\r\nimport React from 'react';\r\nimport './DataTable.css';\r\n\r\nfunction DataTable(props) {\r\n  const list = props.list;\r\n\r\n  let tableEntries = [];\r\n  if (list !== undefined) {\r\n    list.forEach((value, key) => {\r\n      tableEntries.push(\r\n        <TableRow key={key}>\r\n          <TableCell className=\"label\">{key}</TableCell>\r\n          <TableCell align=\"right\">{value}</TableCell>\r\n        </TableRow>\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Table>\r\n      <TableBody>\r\n        {tableEntries}\r\n      </TableBody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport default DataTable","import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport function useApi(url, ticker) {\r\n  const [data, setData] = useState(undefined);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const config = {\r\n      baseURL: (process.env.NODE_ENV === 'production')\r\n        ? 'https://hidden-fortress-30522.herokuapp.com/api'\r\n        : 'http://localhost:5000/api',\r\n      method: 'get'\r\n    }\r\n\r\n    let isMounted = true;\r\n\r\n    if (ticker !== '') {\r\n      setLoading(true);\r\n      setData(undefined);\r\n      setError(undefined);\r\n\r\n      config.url = url;\r\n      config.params = {'id': ticker};\r\n  \r\n      axios(config)\r\n        .then(res => {\r\n          if (isMounted) {\r\n            setLoading(false);\r\n            setData(res.data);\r\n          } \r\n        })\r\n        .catch(err => {\r\n          setLoading(false);\r\n          setError(err);\r\n        });\r\n    }\r\n\r\n    return function cleanup() {\r\n      isMounted = false;\r\n    }\r\n  }, [url, ticker]);\r\n\r\n  return [data, loading, error];\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Card, CardContent, CardHeader, Divider, Button, Typography } from '@material-ui/core';\r\nimport TransitionManager from '../transition/TransitionManager';\r\nimport DataTable from './DataTable';\r\nimport { useApi } from '../ApiHook';\r\nimport './AboutCard.css';\r\n\r\nfunction AboutCard(props) {\r\n  const selectedTicker = props.selectedTicker;\r\n  const formatNumber = props.formatNumber;\r\n  \r\n  const [aboutData, aboutLoading, aboutError] = useApi('/getOverview', selectedTicker);\r\n  const [aboutList, setAboutList] = useState(undefined);\r\n  const [description, setDescription] = useState('');\r\n\r\n  // Update About card\r\n  useEffect(() => {\r\n    if (aboutData !== undefined) {\r\n      const wholeNumber = new Intl.NumberFormat('en-US');\r\n\r\n      setDescription(aboutData.description);\r\n\r\n      setAboutList(new Map([\r\n        ['sector', aboutData.sector],\r\n        ['industry', aboutData.industry],\r\n        ['headquarters', formatAddress(aboutData)],\r\n        ['employees', formatNumber(aboutData.employees, wholeNumber)]\r\n      ]));\r\n    } else {\r\n      setAboutList(undefined);\r\n    }\r\n  }, [aboutData, formatNumber]);\r\n\r\n  // Show more/ show less logic\r\n  const [isHidden, setIsHidden] = useState(true);\r\n  const [headerDescription, setHeaderDescription] = useState(null);\r\n  useEffect(() => {\r\n    let ellipsisStyle = {\r\n      display: (isHidden) ? 'inline' : 'none'\r\n    }\r\n  \r\n    let moreTextStyle = {\r\n      display: (isHidden) ? 'none' : 'inline'\r\n    }\r\n  \r\n    let buttonText = (isHidden) ? 'Show more' : 'Show less';\r\n\r\n    function handleButtonClick() {\r\n      setIsHidden(!isHidden);\r\n    }\r\n\r\n    const truncateLength = 350;\r\n\r\n    if (description.length > truncateLength) {\r\n      setHeaderDescription(\r\n        <>\r\n          <Typography variant=\"subtitle1\">\r\n            {description.slice(0, truncateLength)}\r\n            <span style={ellipsisStyle}>...</span>\r\n            <span style={moreTextStyle}>{description.slice(truncateLength)}</span>\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            disableElevation={true}\r\n            onClick={handleButtonClick}\r\n            className=\"button\"\r\n          >\r\n            <Typography variant=\"subtitle1\">\r\n              {buttonText}\r\n            </Typography>\r\n          </Button>\r\n        </>\r\n      );\r\n    } else {\r\n      setHeaderDescription(\r\n        <Typography variant=\"subtitle1\" paragraph={true}>\r\n          {(description !== '0' && description !== '') ? description : 'No description'}\r\n        </Typography>\r\n      );\r\n    }\r\n  }, [description, isHidden]);\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        title=\"About\"\r\n      />\r\n      <CardContent className=\"content\">\r\n        <TransitionManager \r\n          content= {\r\n            <>\r\n              {headerDescription}\r\n              <Divider />\r\n              <DataTable list={aboutList} />\r\n            </>\r\n          }\r\n          isLoading={aboutLoading}\r\n          loadingMessage=\"Loading\"\r\n          error={aboutError}\r\n        />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction formatAddress(data) {\r\n  return (\r\n    <>\r\n      <Typography variant=\"body2\">\r\n        {data.address}\r\n      </Typography>\r\n      { data.address2 &&\r\n        <Typography variant=\"body2\">\r\n          {data.address2}\r\n        </Typography>\r\n      }\r\n      <Typography variant=\"body2\">\r\n        {data.city + ', ' + data.state}\r\n      </Typography>\r\n      <Typography variant=\"body2\">\r\n        {data.country}\r\n      </Typography>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AboutCard","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardHeader, CardContent } from '@material-ui/core';\r\nimport { useApi } from '../ApiHook';\r\nimport TransitionManager from '../transition/TransitionManager';\r\nimport DataTable from './DataTable';\r\nimport './KeyStatsCard.css';\r\n\r\nfunction KeyStatsCard(props) {\r\n  const selectedTicker = props.selectedTicker;\r\n  const formatNumber = props.formatNumber;\r\n  \r\n  const [keyStatData, keyStatLoading, keyStatError] = useApi('/getKeyStats', selectedTicker);\r\n  const [previousDayQuoteData, previousDayQuoteLoading, previousDayQuoteError] = useApi('/getPreviousDayQuote', selectedTicker);\r\n  const [keyStatList, setKeyStatList] = useState(undefined);\r\n\r\n  // Update Key Stats Card\r\n  useEffect(() => {\r\n    if (keyStatData !== undefined && previousDayQuoteData !== undefined) {\r\n      const currency = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD',\r\n        minimumFractionDigits: 2,\r\n        maximumFractionDigits: 2,\r\n      });\r\n      const decimal = new Intl.NumberFormat('en-US', {\r\n        style: 'decimal',\r\n        minimumFractionDigits: 2,\r\n        maximumFractionDigits: 2,\r\n      });\r\n      const percentage = new Intl.NumberFormat('en-US', {\r\n        style: 'percent',\r\n        minimumFractionDigits: 2,\r\n        maximumFractionDigits: 2,\r\n      });\r\n\r\n      let keyStatMap = new Map([\r\n        ['previous close', null],\r\n        ['day range', null],\r\n        ['year range', null],\r\n        ['market cap', null],\r\n        ['volume', null],\r\n        ['p/e ratio', null],\r\n        ['dividend yield', null],\r\n        ['eps', null]\r\n      ]);\r\n\r\n      function updateKeyStats(apiData) {\r\n        keyStatMap.set('year range', formatNumber(apiData.week52low, currency) + \" - \" +\r\n          formatNumber(apiData.week52high, currency));\r\n        keyStatMap.set('market cap', abbreviateNumber(apiData.marketcap) + ' USD');\r\n        keyStatMap.set('p/e ratio', formatNumber(apiData.peRatio, decimal));\r\n        keyStatMap.set('dividend yield', formatNumber(apiData.dividendYield, percentage));\r\n        keyStatMap.set('eps', formatNumber(apiData.ttmEPS, decimal));      \r\n      }\r\n\r\n      function updateQuote(apiData) {\r\n        keyStatMap.set('previous close', formatNumber(apiData.close, decimal));\r\n        keyStatMap.set('day range', formatNumber(apiData.low, currency) + \" - \" +\r\n          formatNumber(apiData.high, currency));\r\n        keyStatMap.set('volume', abbreviateNumber(apiData.volume));\r\n      }\r\n\r\n      updateKeyStats(keyStatData);\r\n      updateQuote(previousDayQuoteData);\r\n      setKeyStatList(keyStatMap);\r\n    } else { \r\n      setKeyStatList(undefined);\r\n    }\r\n  }, [keyStatData, previousDayQuoteData, formatNumber]);\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        title=\"Key stats\"\r\n      />\r\n      <CardContent className=\"content\">\r\n        <TransitionManager\r\n          content={<DataTable list={keyStatList} />}\r\n          isLoading={keyStatLoading || previousDayQuoteLoading}\r\n          loadingMessage=\"Loading\"\r\n          error={keyStatError || previousDayQuoteError}\r\n        />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction abbreviateNumber(amount) {\r\n  if (amount < 1000) {\r\n    return amount;\r\n  }\r\n\r\n  const digits = Math.floor(Math.log10(amount) + 1);\r\n\r\n  // Adjustment down if exactly divisible by 3, e.g. 100,000 = 100K not 0.1M\r\n  const thousands = Math.floor(digits / 3) - (digits % 3 === 0);\r\n  const symbol = \"KMBT\".charAt(thousands - 1);\r\n  const roundedNum = (amount / Math.pow(10, thousands * 3)).toFixed(2);\r\n\r\n  return roundedNum + symbol;\r\n}\r\n\r\nexport default KeyStatsCard","import { enUS } from 'date-fns/locale';\r\nimport Chart from 'chart.js/auto';\r\n\r\nexport class ChartMaker {\r\n  constructor(chartContainer, chartData, dateRange, isChangePositive = true) {\r\n    this.chartContainer = chartContainer;\r\n    const gradient = this.getGradient(chartContainer.current, isChangePositive);\r\n\r\n    const dataOptions = this.chartConfig.data.datasets[0];\r\n    dataOptions.data = chartData;\r\n    dataOptions.backgroundColor = gradient;\r\n    dataOptions.borderColor = this.getBorderColor(isChangePositive);\r\n\r\n    this.setDateRangeOptions(this.chartConfig, chartData, dateRange);\r\n  }\r\n\r\n  getGradient(chartContainer, isChangePositive) {\r\n    const height = chartContainer.height;\r\n    const ctx = chartContainer.getContext('2d');\r\n    let gradient = ctx.createLinearGradient(0, 0, 0, height);\r\n\r\n    (isChangePositive)\r\n      ? gradient.addColorStop(0, 'rgb(221, 242, 229)')\r\n      : gradient.addColorStop(0, 'rgb(253, 191, 188)');\r\n\r\n    gradient.addColorStop(1, 'white');\r\n    return gradient;\r\n  }\r\n\r\n  getBorderColor(isChangePositive) {\r\n    return (isChangePositive) ? 'rgb(5, 168, 88)' : 'rgb(244,62,62)';\r\n  }\r\n\r\n  setDateRangeOptions(config, chartData, dateRange) {\r\n    let xScale = config.options.scales.x;\r\n\r\n    switch (dateRange) {\r\n      case '1D':\r\n        let date = new Date(chartData[0].x);\r\n        date.setHours(16);\r\n        date.setMinutes(0);\r\n        date.setSeconds(0);\r\n\r\n        xScale.time.unit = 'hour';\r\n        xScale.type = 'time';\r\n        xScale.max = date;\r\n        xScale.time.tooltipFormat = 'MMM dd, yyyy hh:mm a';\r\n        break;\r\n      case '5D':\r\n        xScale.time.unit = 'day';\r\n        xScale.type = 'timeseries';\r\n        delete xScale.max;\r\n        xScale.time.tooltipFormat = 'MMM dd, yyyy hh:mm a';\r\n        break;\r\n      case '1M':\r\n        xScale.time.unit = 'week';\r\n        xScale.type = 'time';\r\n        delete xScale.max;\r\n        xScale.time.tooltipFormat = 'MMM dd, yyyy';\r\n        break;\r\n      case '6M':\r\n        xScale.time.unit = 'month';\r\n        xScale.type = 'time';\r\n        delete xScale.max;\r\n        xScale.time.tooltipFormat = 'MMM dd, yyyy';\r\n        break;\r\n      case 'YTD':\r\n        xScale.time.unit = 'month';\r\n        xScale.type = 'time';\r\n        delete xScale.max;\r\n        xScale.time.tooltipFormat = 'MMM dd, yyyy';\r\n        break;\r\n      case '1Y':\r\n        xScale.time.unit = 'quarter';\r\n        xScale.type = 'time';\r\n        delete xScale.max;\r\n        xScale.time.tooltipFormat = 'MMM dd, yyyy';\r\n        break;\r\n      case '5Y':\r\n        xScale.time.unit = 'year';\r\n        xScale.type = 'time';\r\n        delete xScale.max;\r\n        xScale.time.tooltipFormat = 'MMM dd, yyyy';\r\n        break;\r\n      default:\r\n        console.log('Uncaught date range');\r\n    }\r\n  }\r\n\r\n  getChart() {\r\n    const config = this.chartConfig;\r\n    return new Chart(this.chartContainer.current, config);\r\n  }\r\n\r\n  chartConfig = {\r\n    type: 'line',\r\n    data: {\r\n      datasets: [{\r\n        label: 'Quote',\r\n        data: [],\r\n        backgroundColor: '',\r\n        borderColor: '',\r\n        fill: 'start',\r\n        pointRadius: 0,\r\n        spanGaps: true\r\n      }]\r\n    },\r\n    options: {\r\n      adapter: {\r\n        date: {\r\n          locale: enUS\r\n        }\r\n      },\r\n      plugins: {\r\n        legend: {\r\n          display: false\r\n        },\r\n        tooltip: {\r\n          intersect: false,\r\n          displayColors: false,\r\n        }\r\n      },\r\n      scales: {\r\n        x: {\r\n          type: 'time',\r\n          time: {\r\n            unit: '',\r\n            displayFormats: {\r\n              hour: 'hh:mm a',\r\n              day: 'MMM dd',\r\n              week: 'MMM dd',\r\n              month: 'MMM yyyy',\r\n              quarter: 'MMM yyyy',\r\n              year: 'yyyy'\r\n            },\r\n            tooltipFormat: '',\r\n          },\r\n          grid: {\r\n            display: false,\r\n          },\r\n        },\r\n        y: {\r\n          tick: { \r\n            callback: function(value) {\r\n              const formatter = new Intl.NumberFormat('en-US', {minimumFractionDigits: 2, maximumFractionDigits: 2})\r\n              return formatter(value) \r\n            }\r\n          }\r\n        }\r\n      },\r\n      responsive: true,\r\n      maintainAspectRatio: false\r\n    }\r\n  }\r\n}","import React, { useEffect, useState, useRef } from 'react';\r\nimport 'chartjs-adapter-date-fns';\r\nimport { ChartMaker } from '../../services/ChartMaker';\r\nimport './StockPriceChart.css';\r\n\r\nfunction StockPriceChart(props) {\r\n  const chartData = props.chartData;\r\n  const dateRange = props.dateRange;\r\n  const isChangePositive = props.isChangePositive;\r\n\r\n  const chartContainer = useRef(null);\r\n  const [chartInstance, setChartInstance] = useState(null);\r\n  useEffect(() => {\r\n    if (chartContainer !== null) {\r\n      setChartInstance(prevChart => {\r\n        if (prevChart !== null) {\r\n          prevChart.destroy();\r\n          const chartMaker = new ChartMaker(chartContainer, chartData, dateRange);\r\n          return chartMaker.getChart();\r\n        } else {\r\n          const chartMaker = new ChartMaker(chartContainer, chartData, dateRange);\r\n          return chartMaker.getChart();    \r\n        }\r\n      });\r\n    }\r\n  }, [chartContainer, chartData, dateRange]);\r\n\r\n  // Conditionally update chart color\r\n  useEffect(() => {\r\n    if (chartInstance !== null) {\r\n      const height = chartContainer.current.height;\r\n      const ctx = chartContainer.current.getContext('2d');\r\n      let gradient = ctx.createLinearGradient(0, 0, 0, height);\r\n\r\n      (isChangePositive)\r\n        ? gradient.addColorStop(0, 'rgb(221, 242, 229)')\r\n        : gradient.addColorStop(0, 'rgb(253, 191, 188)');\r\n      gradient.addColorStop(1, 'white');\r\n\r\n      const borderColor = (isChangePositive) ? 'rgb(5, 168, 88)' : 'rgb(244,62,62)';\r\n\r\n      chartInstance.data.datasets[0].backgroundColor = gradient;\r\n      chartInstance.data.datasets[0].borderColor = borderColor;\r\n      chartInstance.update();\r\n    }\r\n  }, [chartContainer, chartInstance, isChangePositive]);\r\n\r\n  return (\r\n    <div className=\"chart-container\">\r\n      <canvas\r\n        id=\"stock-chart\"\r\n        ref={chartContainer}\r\n        aria-label=\"stock price graph\"\r\n        role=\"img\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StockPriceChart","import React from 'react';\r\nimport { ToggleButtonGroup, ToggleButton } from '@material-ui/lab/index'\r\nimport { Typography } from '@material-ui/core';\r\nimport './DateToggleButton.css';\r\n\r\nfunction DateToggleButtons(props) {\r\n  let dateRange = props.dateRange;\r\n  let handleDateClick = props.handleDateClick;\r\n\r\n  return (\r\n    <ToggleButtonGroup\r\n      value={dateRange}\r\n      className=\"toggle-button-group\"\r\n      exclusive\r\n      onChange={handleDateClick}\r\n      size=\"small\"\r\n      aria-label=\"date range\"\r\n    >\r\n      <ToggleButton \r\n        value=\"1D\" \r\n        aria-label=\"1 day\"\r\n        className=\"toggle-button\"\r\n      >\r\n        <Typography variant=\"subtitle1\">1D</Typography>\r\n      </ToggleButton>\r\n      <ToggleButton \r\n        value=\"5D\" \r\n        aria-label=\"5 days\"\r\n        className=\"toggle-button\"\r\n      >\r\n        <Typography variant=\"subtitle1\">5D</Typography>\r\n      </ToggleButton>\r\n      <ToggleButton \r\n        value=\"1M\" \r\n        aria-label=\"1 month\"\r\n        className=\"toggle-button\"\r\n      >\r\n        <Typography variant=\"subtitle1\">1M</Typography>\r\n      </ToggleButton>\r\n      <ToggleButton \r\n        value=\"6M\" \r\n        aria-label=\"6 months\"\r\n        className=\"toggle-button\"\r\n      >\r\n        <Typography variant=\"subtitle1\">6M</Typography>\r\n      </ToggleButton>\r\n      <ToggleButton \r\n        value=\"YTD\" \r\n        aria-label=\"year to date\"\r\n        className=\"toggle-button\"\r\n      >\r\n        <Typography variant=\"subtitle1\">YTD</Typography>\r\n      </ToggleButton>\r\n      <ToggleButton \r\n        value=\"1Y\" \r\n        aria-label=\"1 year\"\r\n        className=\"toggle-button\"\r\n      >\r\n        <Typography variant=\"subtitle1\">1Y</Typography>\r\n      </ToggleButton>\r\n      <ToggleButton \r\n        value=\"5Y\" \r\n        aria-label=\"5 years\"\r\n        className=\"toggle-button\"\r\n      >\r\n        <Typography variant=\"subtitle1\">5Y</Typography>\r\n      </ToggleButton>\r\n    </ToggleButtonGroup>\r\n  );\r\n}\r\n\r\nexport default DateToggleButtons","import React, { useEffect, useState } from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport { ArrowUpward, ArrowDownward } from '@material-ui/icons';\r\nimport './PriceChangePercent.css';\r\n\r\nfunction PriceChangePercent(props) {\r\n  const isChangePositive = props.isChangePositive;\r\n  const percentChange = props.percentChange;\r\n\r\n  const [percentText, setPercentText] = useState('');\r\n  useEffect(() => {\r\n    const formatter = new Intl.NumberFormat('en-US', {\r\n      style: 'percent',\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n      signDisplay: 'never'\r\n    });\r\n\r\n    if (percentChange !== null) {\r\n      setPercentText(formatter.format(percentChange));\r\n    }\r\n  }, [percentChange])\r\n\r\n  let negativeStyle = {\r\n    backgroundColor: 'rgb(254,232,230)',\r\n    color: 'rgb(184,37,47)',\r\n  }\r\n\r\n  let positiveStyle = {\r\n    backgroundColor: 'rgb(229,244,234)',\r\n    color: 'rgb(58,147,98)',\r\n  }\r\n\r\n  return (\r\n    <div \r\n      className=\"percent-box\"\r\n      style={(isChangePositive)\r\n        ? positiveStyle\r\n        : negativeStyle\r\n      }\r\n      aria-label={ (isChangePositive)\r\n        ? `Up by ${percentText}`\r\n        : `Down by ${percentText}`\r\n      }\r\n    >\r\n      { (isChangePositive)\r\n        ? <ArrowUpward \r\n            className=\"direction-icon\"\r\n            aria-hidden=\"true\"\r\n          />\r\n        : <ArrowDownward \r\n            className=\"direction-icon\"\r\n            aria-hidden=\"true\"\r\n          />\r\n      }\r\n      <Typography className=\"percent-change\">\r\n        {percentText}\r\n      </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PriceChangePercent","import React, { useEffect, useState } from 'react'\r\nimport { Typography } from '@material-ui/core';\r\nimport './PriceChangeAmount.css';\r\n\r\nfunction PriceChangeAmount(props) {\r\n  const isChangePositive = props.isChangePositive;\r\n  const amountChange = props.amountChange;\r\n  const dateRange = props.dateRange;\r\n\r\n  const [amountText, setAmountText] = useState('');\r\n  useEffect(() => {\r\n    const formatter = new Intl.NumberFormat('en-US', {\r\n      style: 'decimal',\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n      signDisplay: 'always'\r\n    });\r\n\r\n    if (amountChange !== null){\r\n      const dateLabel = (dateRange !== '1D') ? dateRange : 'Today';\r\n      const changeString = formatter.format(amountChange) + ' ' + dateLabel;\r\n      setAmountText(changeString);\r\n    }\r\n  }, [amountChange, dateRange]);\r\n\r\n  let negativeStyle = {\r\n    color: 'rgb(184,37,47)',\r\n  }\r\n\r\n  let positiveStyle = {\r\n    color: 'rgb(58,147,98)',\r\n  }\r\n\r\n  return (\r\n    <Typography \r\n      className=\"amount-change\"\r\n      style={ (isChangePositive)\r\n        ? positiveStyle\r\n        : negativeStyle\r\n      }\r\n    >\r\n      {amountText}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default PriceChangeAmount","import React, { useEffect, useState } from 'react';\r\nimport { CardHeader, Chip, Typography } from '@material-ui/core';\r\nimport PriceChangePercent from './PriceChangePercent';\r\nimport PriceChangeAmount from './PriceChangeAmount';\r\nimport { useApi } from '../ApiHook';\r\nimport './ChartHeader.css';\r\n\r\nfunction ChartHeader(props) {\r\n  const selectedTicker = props.selectedTicker;\r\n  const selectedName = props.selectedName;\r\n  const dateRange = props.dateRange;\r\n  const chartData = props.chartData;\r\n  const isChangePositive = props.isChangePositive;\r\n  const handlePriceChange = props.handlePriceChange;\r\n\r\n  const [quoteApiData] = useApi('/getQuote', selectedTicker)\r\n  const [lastQuote, setLastQuote] = useState(undefined);\r\n  const [updateTime, setUpdateTime] = useState(undefined);\r\n  useEffect(() => {\r\n    if (quoteApiData !== undefined) {\r\n      const dateOptions = {\r\n        dateStyle: 'long',\r\n        timeStyle: 'long',\r\n        timeZone: 'America/New_York'\r\n      }\r\n      const dateFormatter = new Intl.DateTimeFormat('en-US', dateOptions)\r\n\r\n      setUpdateTime(dateFormatter.format(new Date(quoteApiData.t * 1000)))\r\n      setLastQuote(quoteApiData.c)\r\n\r\n    } else {\r\n      setLastQuote(undefined);\r\n    }\r\n  }, [quoteApiData])\r\n\r\n  const [amountChange, setAmountChange] = useState(null);\r\n  useEffect(() => {\r\n    if (chartData !== undefined && lastQuote !== undefined) {\r\n      const startPrice = chartData[0].y;\r\n      const change = lastQuote - startPrice;\r\n      handlePriceChange((change >= 0) ? true: false);\r\n      setAmountChange(change);\r\n    }\r\n  }, [chartData, lastQuote, handlePriceChange])\r\n\r\n  const [percentChange, setPercentChange] = useState(null);\r\n  useEffect(() => {\r\n    if (chartData !== undefined && lastQuote !== undefined) {\r\n      const startPrice = chartData[0].y;\r\n      const percentChange = (lastQuote - startPrice) / startPrice;\r\n      setPercentChange(percentChange);\r\n    }\r\n  }, [chartData, lastQuote])\r\n\r\n  const currencyFormatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 2,\r\n    maximumFractionDigits: 2,\r\n  });\r\n\r\n  let header = (\r\n    <>\r\n      <Typography variant=\"h1\">\r\n        {selectedName}\r\n      </Typography>\r\n      { lastQuote &&\r\n        <>\r\n          <div className=\"stock-performance\">\r\n            <span>\r\n              <Typography className=\"last-quote\" >\r\n                {currencyFormatter.format(lastQuote)}\r\n              </Typography>\r\n            </span>\r\n            {percentChange &&\r\n              <PriceChangePercent\r\n                isChangePositive={isChangePositive}\r\n                percentChange={percentChange}\r\n              />\r\n            }\r\n            {amountChange &&\r\n              <PriceChangeAmount\r\n                isChangePositive={isChangePositive}\r\n                amountChange={amountChange}\r\n                dateRange={dateRange}\r\n              />\r\n            }\r\n          </div>\r\n          <Typography variant=\"subtitle1\" className=\"last-updated\">\r\n            {updateTime}\r\n          </Typography>\r\n        </>\r\n      }\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <CardHeader\r\n      title={header}\r\n      disableTypography={true}\r\n      action={\r\n        <Chip\r\n          color=\"primary\"  \r\n          label={selectedTicker}\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default ChartHeader","import { parse } from \"date-fns\";\r\n\r\nexport const chartDataFormatter = {\r\n  parse1D,\r\n  parse5D,\r\n  parse1M,\r\n  parse6M,\r\n  parseYTD,\r\n  parse1Y,\r\n  parse5Y\r\n}\r\n\r\n    /* JS Date function by default uses the system local time. Assume to be Eastern time.\r\n    *  TO DO: make adjustments to account for local time zones and daylight savings\r\n    */\r\n\r\nfunction parse1D(data) { \r\n  function parseDate(el) {\r\n    let dateString = `${el.date} ${el.minute}`;\r\n    return parse(dateString, 'yyyy-MM-dd HH:mm', new Date());\r\n  }\r\n  \r\n  const results = [];\r\n  data.forEach(el => {\r\n    // Skip null entries\r\n    if (el.close !== null) {\r\n      const entry = {\r\n        x: parseDate(el),\r\n        y: el.close,\r\n        volume: el.volume\r\n      }\r\n      \r\n      results.push(entry);\r\n    }\r\n  });\r\n  \r\n  // Sort result by date\r\n  results.sort((a,b) => a.x - b.x);\r\n\r\n  return results;\r\n}\r\n\r\nfunction parse5D(data) {\r\n  let refreshDate = data['Meta Data']['3. Last Refreshed'];\r\n  let endDate = parse(refreshDate, 'yyyy-MM-dd HH:mm:ss', new Date());\r\n  endDate.setSeconds(0);\r\n  endDate.setMinutes(0);\r\n  endDate.setHours(16);\r\n\r\n  const dateOffset = 7 * 60 * 60 * 24 * 1000;\r\n\r\n  let startDate = new Date(endDate - dateOffset);\r\n  startDate.setMinutes(30);\r\n  startDate.setHours(9);\r\n\r\n  const results = [];\r\n  const timeSeriesData = data['Time Series (30min)'];\r\n\r\n  for (let key in timeSeriesData) {\r\n    const currentDate = parse(key, 'yyyy-MM-dd HH:mm:ss', new Date());\r\n\r\n    if (currentDate >= startDate && currentDate <= endDate) {\r\n      // Check if time is between 9:30am to 4pm ET\r\n      let startTime = new Date(currentDate);\r\n      startTime.setMinutes(30);\r\n      startTime.setHours(9);\r\n\r\n      let endTime = new Date(currentDate);\r\n      endTime.setMinutes(0);\r\n      endTime.setHours(16);\r\n\r\n      if (currentDate >= startTime && currentDate <= endTime) {\r\n        const entry = {\r\n          x: currentDate,\r\n          y: timeSeriesData[key]['4. close'],\r\n          volume: timeSeriesData[key]['5. volume']\r\n        }\r\n    \r\n        results.push(entry);\r\n      }\r\n    }\r\n  }\r\n  \r\n  // Sort result by date\r\n  results.sort((a,b) => a.x - b.x);\r\n\r\n  return results;\r\n}\r\n\r\nfunction parse1M(data) {\r\n  const endDate = new Date();\r\n  const startDate = new Date(endDate - 30 * 60 * 60 * 24 * 1000);\r\n\r\n  let results = parseDailyData(data, startDate, endDate)\r\n  \r\n  // Sort result by date\r\n  results.sort((a, b) => a.x - b.x);\r\n\r\n  return results;\r\n}\r\n\r\nfunction parse6M(data) {\r\n  const endDate = new Date();\r\n  const startDate = new Date(endDate - 6 * 30 * 60 * 60 * 24 * 1000);\r\n  \r\n  let results = parseDailyData(data, startDate, endDate)\r\n  \r\n  // Sort result by date\r\n  results.sort((a, b) => a.x - b.x);\r\n\r\n  return results;\r\n}\r\n\r\nfunction parseYTD(data) {\r\n  const endDate = new Date();\r\n  const startDate = new Date(endDate.getFullYear(),0,1);\r\n  \r\n  let results = parseDailyData(data, startDate, endDate)\r\n  \r\n  // Sort result by date\r\n  results.sort((a, b) => a.x - b.x);\r\n\r\n  return results;\r\n}\r\n\r\nfunction parse1Y(data) {\r\n  const endDate = new Date();\r\n  const startDate = new Date(endDate - 365 * 60 * 60 * 24 * 1000);\r\n\r\n  let results = parseDailyData(data, startDate, endDate)\r\n  \r\n  // Sort result by date\r\n  results.sort((a, b) => a.x - b.x);\r\n\r\n  return results;\r\n}\r\n\r\nfunction parse5Y(data) {\r\n  const refreshDate = data['Meta Data']['3. Last Refreshed'];\r\n  const endDate = parse(refreshDate, 'yyyy-MM-dd', new Date());\r\n  const dateOffset = 5 * 365 * 60 * 60 * 24 * 1000;\r\n\r\n  const startDate = new Date(endDate - dateOffset);\r\n  \r\n  const results = [];\r\n  const timeSeriesData = data['Weekly Time Series'];\r\n\r\n  for (let key in timeSeriesData) {\r\n    const currentDate = parse(key, 'yyyy-MM-dd', new Date());\r\n\r\n    if (currentDate >= startDate && currentDate <= endDate) {\r\n      const entry = {\r\n        x: currentDate,\r\n        y: timeSeriesData[key]['4. close'],\r\n        volume: timeSeriesData[key]['5. volume']\r\n      }\r\n\r\n      results.push(entry);\r\n    }\r\n  }\r\n\r\n  // Sort result by date\r\n  results.sort((a, b) => a.x - b.x);\r\n  return results;\r\n}\r\n\r\nfunction parseDailyData(data, startDate, endDate) {\r\n  const results = [];\r\n  \r\n  data.forEach(el => {\r\n    const currentDate = new Date(el.t);\r\n\r\n    if (currentDate >= startDate && currentDate <= endDate) {\r\n      const entry = {\r\n        x: currentDate,\r\n        y: el.c,\r\n        volume: el.v\r\n      }\r\n  \r\n      results.push(entry);\r\n    }\r\n  });\r\n\r\n  return results;\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Card, CardContent } from '@material-ui/core';\r\nimport StockPriceChart from './StockPriceChart';\r\nimport DateToggleButtons from './DateToggleButtons';\r\nimport ChartHeader from './ChartHeader';\r\nimport { useChartData } from './ChartHooks';\r\nimport './ChartCard.css';\r\nimport TransitionManager from '../transition/TransitionManager';\r\n\r\nfunction ChartCard(props) {\r\n  const selectedTicker = props.selectedTicker;\r\n  const selectedName = props.selectedName;\r\n\r\n  const [dateRange, setDateRange] = useState('1D');\r\n  const handleDateClick = (e, newDateRange) => {\r\n    if (newDateRange !== null) {\r\n      setDateRange(newDateRange);\r\n    }\r\n  }\r\n\r\n  // Fetch data on ticker change\r\n  const [chartData, chartLoading, chartError] = useChartData(dateRange, selectedTicker);\r\n  useEffect(() => {\r\n    // Reset to 1 day view on new ticker selected\r\n    setDateRange('1D');\r\n  }, [selectedTicker]);\r\n\r\n  const [isChangePositive, setIsChangePositive] = useState(null);\r\n  function handlePriceChange(isPositive) {\r\n    setIsChangePositive(isPositive);\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <ChartHeader\r\n        selectedTicker={selectedTicker}\r\n        selectedName={selectedName}\r\n        dateRange={dateRange}\r\n        chartData={chartData}\r\n        isChangePositive={isChangePositive}\r\n        handlePriceChange={handlePriceChange}\r\n      />\r\n      <CardContent className=\"content\">\r\n        <DateToggleButtons\r\n          dateRange={dateRange}\r\n          handleDateClick={handleDateClick}\r\n        />\r\n        <div>\r\n          <TransitionManager\r\n            content={chartData &&\r\n              <StockPriceChart\r\n                dateRange={dateRange}\r\n                chartData={chartData}\r\n                isChangePositive={isChangePositive}\r\n              />\r\n            }\r\n            isLoading={chartLoading}\r\n            loadingMessage=\"Loading\"\r\n            error={chartError}\r\n          />\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ChartCard","import { useState, useEffect } from 'react';\r\nimport { chartDataFormatter } from '../../services/ChartDataFormatter';\r\nimport { useApi } from '../ApiHook';\r\n\r\nexport function useChartData(dateRange, ticker) {\r\n  const [apiData1D, loading1D, error1D] = useApi('/getIntradayQuotes', ticker);\r\n  const [apiData5D, loading5D, error5D] = useApi('/getFiveDayQuotes', ticker);\r\n  const [apiData1Y, loading1Y, error1Y] = useApi('/getAnnualQuotes', ticker);\r\n  const [apiData5Y, loading5Y, error5Y] = useApi('/getFiveYearQuotes', ticker);\r\n  \r\n  const [chartData1D, setChartData1D] = useState(undefined);\r\n  useEffect(() => {\r\n    if (apiData1D !== undefined) {\r\n      setChartData1D(chartDataFormatter.parse1D(apiData1D));\r\n    } else {\r\n      setChartData1D(undefined);\r\n    }\r\n  }, [apiData1D])\r\n\r\n  const [chartData5D, setChartData5D] = useState(undefined);\r\n  useEffect(() => {\r\n    if (apiData5D !== undefined) {\r\n      setChartData5D(chartDataFormatter.parse5D(apiData5D));\r\n    } else {\r\n      setChartData5D(undefined);\r\n    }\r\n  }, [apiData5D])\r\n\r\n  const [chartData1M, setChartData1M] = useState(undefined);\r\n  const [chartData6M, setChartData6M] = useState(undefined);\r\n  const [chartDataYTD, setChartDataYTD] = useState(undefined);\r\n  const [chartData1Y, setChartData1Y] = useState(undefined);\r\n  useEffect(() => {\r\n    if (apiData1Y !== undefined) {\r\n      const timeSeriesData = apiData1Y.results;\r\n\r\n      setChartData1M(chartDataFormatter.parse1M(timeSeriesData));\r\n      setChartData6M(chartDataFormatter.parse6M(timeSeriesData));\r\n      setChartDataYTD(chartDataFormatter.parseYTD(timeSeriesData));\r\n      setChartData1Y(chartDataFormatter.parse1Y(timeSeriesData));\r\n    } else {\r\n      setChartData1M(undefined);\r\n      setChartData6M(undefined);\r\n      setChartDataYTD(undefined);\r\n      setChartData1Y(undefined);\r\n    }\r\n  }, [apiData1Y])\r\n\r\n  const [chartData5Y, setChartData5Y] = useState(undefined);\r\n  useEffect(() => {\r\n    if (apiData5Y !== undefined) {\r\n      setChartData5Y(chartDataFormatter.parse5Y(apiData5Y));\r\n    } else {\r\n      setChartData5Y(undefined);\r\n    }\r\n  }, [apiData5Y])\r\n\r\n  switch (dateRange) {\r\n    case '1D':\r\n      return [chartData1D, loading1D, error1D];\r\n    case '5D':\r\n      return [chartData5D, loading5D, error5D];\r\n    case '1M':\r\n      return [chartData1M, loading5D, error5D];\r\n    case '6M':\r\n      return [chartData6M, loading1Y, error1Y];\r\n    case 'YTD':\r\n      return [chartDataYTD, loading1Y, error1Y];\r\n    case '1Y':\r\n      return [chartData1Y, loading1Y, error1Y];\r\n    case '5Y':\r\n      return [chartData5Y, loading5Y, error5Y];\r\n    default:\r\n      return console.log('Uncaught date range');\r\n  }\r\n}","import React from 'react';\r\nimport AboutCard from './other/AboutCard';\r\nimport KeyStatsCard from './other/KeyStatsCard';\r\nimport ChartCard from './chart/ChartCard';\r\nimport './StockOverview.css';\r\n\r\nfunction StockOverview(props) {\r\n  const selectedTicker = props.selectedTicker;\r\n  const selectedName = props.selectedName;\r\n\r\n  function formatNumber(value, formatter) {\r\n    if (!isNaN(value)) {\r\n      return formatter.format(value);\r\n    } else {\r\n      return 'N/A';\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"chart-card\">\r\n        <ChartCard\r\n          selectedTicker={selectedTicker}\r\n          selectedName={selectedName}\r\n        />\r\n      </div>\r\n      <div className=\"key-stat-card\">\r\n        <KeyStatsCard \r\n          selectedTicker={selectedTicker}\r\n          formatNumber={formatNumber}\r\n        />\r\n      </div>\r\n      <div className=\"about-card\">\r\n        <AboutCard\r\n          selectedTicker={selectedTicker}\r\n          formatNumber={formatNumber}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StockOverview","import React from 'react';\r\nimport { Container, Divider, IconButton, Typography } from '@material-ui/core';\r\nimport './Footer.css';\r\nimport { Email, GitHub, LinkedIn } from '@material-ui/icons';\r\n\r\nfunction Footer(props) {\r\n  const linkedInUrl = 'https://www.linkedin.com/in/kevinliou'\r\n  const gitHubUrl = 'https://github.com/kevliou/stock-screener'\r\n\r\n  function handleOpenUrlInNewTab(url) {\r\n    const newWindow = window.open(url, '_blank', 'noopener,noreferrer')\r\n    if (newWindow) newWindow.opener = null\r\n  }\r\n\r\n  function handleSendEmail() {\r\n    window.location.href = 'mailto:kliou879@gmail.com?subject=Greetings!';\r\n  }\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <Container maxWidth=\"md\">\r\n        <Divider className=\"divider\" />\r\n        <div className=\"footer-signature\">\r\n          <Typography\r\n            display=\"block\"\r\n            color=\"secondary\"\r\n            className=\"name\"\r\n          >\r\n            {\"\\u00A9 \" + new Date().getFullYear() + \" Kevin Liou\"}\r\n          </Typography>\r\n          <div>\r\n            <IconButton\r\n              size=\"medium\"\r\n              aria-label=\"Github\"\r\n              color=\"secondary\"\r\n              onClick={() => handleOpenUrlInNewTab(gitHubUrl)}\r\n            >\r\n              <GitHub />\r\n            </IconButton>\r\n            <IconButton\r\n              size=\"medium\"\r\n              aria-label=\"LinkedIn\"\r\n              color=\"secondary\"\r\n              onClick={() => handleOpenUrlInNewTab(linkedInUrl)}\r\n            >\r\n              <LinkedIn />\r\n            </IconButton>\r\n            <IconButton\r\n              size=\"medium\"\r\n              aria-label=\"email\"\r\n              color=\"secondary\"\r\n              onClick={handleSendEmail}\r\n            >\r\n              <Email />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer","import React, { useState } from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport SearchForm from './SearchForm';\r\nimport StockOverview from './StockOverview';\r\nimport Footer from './Footer';\r\nimport './LandingPage.css';\r\nimport TransitionManager from './transition/TransitionManager';\r\nimport { useApi } from './ApiHook';\r\n\r\nfunction LandingPage(props) {\r\n  const [selectedTicker, setSelectedTicker] = useState('');\r\n  const [selectedName, setSelectedName] = useState('');\r\n\r\n  function updateSelectedCompany(symbol, companyName) {\r\n    console.log('Selected Ticker: ' + symbol);\r\n    setSelectedTicker(symbol);\r\n    setSelectedName(companyName);\r\n  }\r\n\r\n  const [, herokuLoading, herokuError] = useApi('/getStatus', 'na');\r\n\r\n  const stockOverviewContent = (\r\n    <div className=\"stock-card\">\r\n      <section>\r\n        {selectedTicker &&\r\n          <StockOverview\r\n            selectedTicker={selectedTicker}\r\n            selectedName={selectedName}\r\n          />\r\n        }\r\n      </section>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Container maxWidth=\"md\">\r\n        <div className=\"search\">\r\n          <section>\r\n            <SearchForm\r\n              selectedTicker={selectedTicker}\r\n              updateSelectedCompany={updateSelectedCompany}\r\n            />\r\n          </section>\r\n        </div>\r\n        {selectedTicker &&\r\n          <TransitionManager\r\n            content={stockOverviewContent}\r\n            isLoading={herokuLoading}\r\n            loadingMessage='Heroku Loading'\r\n            error={herokuError}\r\n          />\r\n        }\r\n      </Container>\r\n      <Footer className=\"footer\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingPage","import React from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport LandingPage from './components/LandingPage';\n\nfunction App() {\n  let theme = createMuiTheme({\n    palette: {\n      secondary: {\n        main:'#FFFFFF'\n      }\n    },\n    typography: {\n      h1: {\n        fontSize:'1.5rem'\n      },\n      body1:{\n        fontSize:'0.875rem'\n      },\n      body2:{\n        fontSize:'0.875rem'\n      },\n      subtitle1:{\n        fontSize: '0.75rem'\n      }\n    },\n    overrides: {\n      MuiTableRow: {\n        root: {\n          \"&:last-child td\": {\n            borderBottom: 0\n          }\n        }\n      }\n    }\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <LandingPage />\n    </ThemeProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}